var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// src/main/todrawio-isyfact-functions.js
var require_todrawio_isyfact_functions = __commonJS({
  "src/main/todrawio-isyfact-functions.js"(exports2, module2) {
    function addFontSizeToStyle(style, e) {
      let fontSize = e.bounds && e.bounds.width > 240 && e.bounds.height > 120 ? 16 : 11;
      style = style.replace(/fontSize=\d+;/, "");
      style += `fontSize=${fontSize};`;
      return style;
    }
    function isExternElement(e) {
      let parents = $(e.concept).parents();
      for (let i = 0; i < parents.length; i++) {
        console.log("parent: " + parents[i].name);
        if (parents[i].type === "folder" && parents[i].name && parents[i].name.toLowerCase() === "extern") {
          return true;
        }
      }
      return false;
    }
    function setShapeColor(style, element) {
      if (isExternElement(element) && !element.fillColor) {
        let isPerson = false;
        if (typeof element.prop === "function") {
          let c4TypeProp = element.prop("c4Type");
          if (c4TypeProp && c4TypeProp.trim().toLowerCase() === "person") {
            isPerson = true;
          }
        }
        style = style.replace(/fillColor=[^;]*;/g, "");
        style += isPerson ? "fillColor=#6b6477;" : "fillColor=#8C8496;";
      } else {
        if (element.fillColor) {
          style = style.replace(/fillColor=[^;]*;/g, "");
          style += `fillColor=${element.fillColor};`;
        }
        if (element.fontColor) {
          style = style.replace(/fontColor=[^;]*;/g, "");
          style += `fontColor=${element.fontColor};`;
        }
      }
      return style;
    }
    function createConnector(newId, c4Name, c4Type, c4Description, relStyle, parent, e, entryExit, bendPoints, fw) {
      let label2 = c4RelLabel(c4Name, "", c4Description);
      let linkAttr = "";
      if (typeof e.prop === "function") {
        let linkValue = e.prop("link");
        if (linkValue && linkValue.trim() !== "") {
          linkAttr = ` link="${escX2(linkValue)}"`;
        }
      }
      let newElem = `<mxCell style="${relStyle + (entryExit ? entryExit.exit + entryExit.entry : "")}" edge="1" parent="${parent}" source="${e.source.id}" target="${e.target.id}">
        <mxGeometry width="160" relative="1" as="geometry">
        ${bendPoints}
        </mxGeometry>
    </mxCell>
`;
      let newObj = `				<object id="${newId}" c4Name="${c4Name}" c4Description="${c4Description}" c4Type="${c4Type}" label="${label2}" placeholders="1" tooltip="${c4Tooltip(c4Name, c4Type, c4Description)}"${linkAttr}>
        ${newElem}
    </object>
`;
      fw.write(newObj);
    }
    function handleBendPoints(e) {
      var xml = "";
      if (e.getRelativeBendpoints() != null) {
        xml += '<Array as="points">\n';
        var bps = getAbsoluteBendpoints2(e);
        for (let p = 0; p < bps.length; p++) {
          xml += '<mxPoint x="' + bps[p].x + '" y="' + bps[p].y + '" />\n';
        }
        xml += "</Array>\n";
      }
      return xml;
    }
    function getAbsoluteBendpoints2(conn) {
      let abps = [];
      conn.getRelativeBendpoints().forEach((bp) => {
        let x = bp.startX + conn.source.bounds.x + conn.source.bounds.width / 2;
        let y = bp.startY + conn.source.bounds.y + conn.source.bounds.height / 2;
        $(conn.source).parents().forEach((p) => {
          try {
            x += p.bounds.x;
            y += p.bounds.y;
          } catch (e) {
          }
        });
        let abp = {
          x,
          y
        };
        abps.push(abp);
      });
      return abps;
    }
    function createConnectorWithTopic(topic, newId, c4Name, c4Type, c4Description, relStyle, parent, e, entryExit, fw) {
      let topicId = newId + "_topic";
      let topicLabel = topic;
      let topicStyle = "shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;fillColor=#FF9999;strokeColor=#A15F5F;align=center;verticalAlign=middle;fontFamily=Helvetica;fontSize=12;fontColor=default;textDirection=ltr;direction=south;";
      let src = e.source.bounds;
      let tgt = e.target.bounds;
      function center(b) {
        return { x: b.x + b.width / 2, y: b.y + b.height / 2 };
      }
      let bendArr = getAbsoluteBendpoints2(e);
      let topicX, topicY, bends1 = [], bends2 = [];
      if (bendArr.length > 0) {
        let midIdx = Math.floor(bendArr.length / 2);
        topicX = bendArr[midIdx].x;
        topicY = bendArr[midIdx].y;
        bends1 = bendArr.slice(0, midIdx);
        bends2 = bendArr.slice(midIdx + 1);
      } else {
        let c1 = center(src);
        let c2 = center(tgt);
        topicX = (c1.x + c2.x) / 2;
        topicY = (c1.y + c2.y) / 2;
        bends1 = [];
        bends2 = [];
      }
      function bendsToXml(bends) {
        if (!bends.length) return "";
        let arr = bends.map((pt) => `<mxPoint x="${pt.x}" y="${pt.y}"/>`).join("");
        return `<Array as="points">${arr}</Array>`;
      }
      var bendPoints1 = bendsToXml(bends1);
      var bendPoints2 = bendsToXml(bends2);
      let topicElem = `   <object id="${topicId}" label="${topicLabel}">
        <mxCell style="${topicStyle}" vertex="1" parent="${parent}">
            <mxGeometry x="${topicX - 30}" y="${topicY - 30}" width="60 pt" height="35 pt" as="geometry" />
        </mxCell>
    </object>
`;
      fw.write(topicElem);
      let label1 = c4RelLabel(c4Name, "", c4Description);
      let newElem1 = `<mxCell style="${relStyle + (entryExit ? entryExit.exit : "")}" edge="1" parent="${parent}" source="${e.source.id}" target="${topicId}">
        <mxGeometry width="160" relative="1" as="geometry">
        ${bendPoints1}
        </mxGeometry>
    </mxCell>
`;
      let newObj1 = `   <object id="${newId}_1" c4Name="${c4Name}" c4Description="${c4Description}" c4Type="${c4Type}" label="${label1}" placeholders="1" tooltip="${c4Tooltip(c4Name, c4Type, c4Description)}">
        ${newElem1}
    </object>
`;
      fw.write(newObj1);
      let label2 = c4RelLabel(c4Name, "", c4Description);
      let newElem2 = `<mxCell style="${relStyle + (entryExit ? entryExit.entry : "")}" edge="1" parent="${parent}" source="${topicId}" target="${e.target.id}">
        <mxGeometry width="160" relative="1" as="geometry">
        ${bendPoints2}
        </mxGeometry>
    </mxCell>
`;
      let newObj2 = `   <object id="${newId}_2" c4Name="${c4Name}" c4Description="${c4Description}" c4Type="${c4Type}" label="${label2}" placeholders="1" tooltip="${c4Tooltip(c4Name, c4Type, c4Description)}">
        ${newElem2}
    </object>
`;
      fw.write(newObj2);
    }
    function c4ObjLabel(c4Name, c4Type, c4Description, fontColor) {
      const wellKnownC4Types = ["Person", "System", "Container", "Component", "Database", "extern", "Software System"];
      let showTypeAndDesc = wellKnownC4Types.map((t) => t.toLowerCase()).includes((c4Type || "").toLowerCase());
      let label2 = `<font style=""><b>%c4Name%</b></font>`;
      if (showTypeAndDesc) {
        label2 += `<div><font style="font-size: 11px">[%c4Type%]</font></div>`;
        if (c4Description && c4Description.trim() !== "") {
          label2 += `<br><div><font style="font-size: 11px"><font color="${fontColor}">%c4Description%</font></div>`;
        }
      }
      return escX2(label2);
    }
    function c4RelLabel(c4Name, c4Type, c4Description) {
      label = `<font style=""><b>%c4Name%</b></font>`;
      return escX2(label);
    }
    function c4Tooltip(c4Name, c4Type, c4Description) {
      return c4Description ? "%c4Description%" : "no description";
    }
    function escX2(s) {
      var decodedString = unescape(encodeURIComponent(s));
      ;
      return decodedString.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&apos;");
    }
    function unEscX(xml) {
      return xml.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&quot;/g, '"').replace(/&#39;/g, "'").replace(/&amp;/g, "&");
    }
    var colorFactory = () => Java.type("com.archimatetool.editor.ui.ColorFactory");
    function effectiveFillColor(e) {
      if (e.fillColor) {
        return e.fillColor;
      }
      var method = e.class.getDeclaredMethod("getEObject");
      method.setAccessible(true);
      eObject = method.invoke(e);
      color = colorFactory().getDefaultFillColor(eObject);
      return colorFactory().convertColorToString(color);
    }
    function effectiveFontColor(e) {
      if (e.fontColor) {
        return e.fontColor;
      }
      var method = e.class.getDeclaredMethod("getEObject");
      method.setAccessible(true);
      var eObject2 = method.invoke(e);
      var color2 = colorFactory().getDefaultFontColor(eObject2);
      return colorFactory().convertColorToString(color2);
    }
    module2.exports = {
      addFontSizeToStyle,
      isExternElement,
      setShapeColor,
      createConnector,
      handleBendPoints,
      getAbsoluteBendpoints: getAbsoluteBendpoints2,
      createConnectorWithTopic,
      c4ObjLabel,
      c4RelLabel,
      c4Tooltip,
      escX: escX2,
      effectiveFillColor,
      effectiveFontColor,
      unEscX
    };
  }
});

// node_modules/fast-xml-parser/src/util.js
var require_util = __commonJS({
  "node_modules/fast-xml-parser/src/util.js"(exports2) {
    "use strict";
    var nameStartChar = ":A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    var nameChar = nameStartChar + "\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var nameRegexp = "[" + nameStartChar + "][" + nameChar + "]*";
    var regexName = new RegExp("^" + nameRegexp + "$");
    var getAllMatches = function(string, regex) {
      const matches = [];
      let match = regex.exec(string);
      while (match) {
        const allmatches = [];
        allmatches.startIndex = regex.lastIndex - match[0].length;
        const len = match.length;
        for (let index = 0; index < len; index++) {
          allmatches.push(match[index]);
        }
        matches.push(allmatches);
        match = regex.exec(string);
      }
      return matches;
    };
    var isName = function(string) {
      const match = regexName.exec(string);
      return !(match === null || typeof match === "undefined");
    };
    exports2.isExist = function(v) {
      return typeof v !== "undefined";
    };
    exports2.isEmptyObject = function(obj) {
      return Object.keys(obj).length === 0;
    };
    exports2.merge = function(target, a, arrayMode) {
      if (a) {
        const keys = Object.keys(a);
        const len = keys.length;
        for (let i = 0; i < len; i++) {
          if (arrayMode === "strict") {
            target[keys[i]] = [a[keys[i]]];
          } else {
            target[keys[i]] = a[keys[i]];
          }
        }
      }
    };
    exports2.getValue = function(v) {
      if (exports2.isExist(v)) {
        return v;
      } else {
        return "";
      }
    };
    exports2.isName = isName;
    exports2.getAllMatches = getAllMatches;
    exports2.nameRegexp = nameRegexp;
  }
});

// node_modules/fast-xml-parser/src/validator.js
var require_validator = __commonJS({
  "node_modules/fast-xml-parser/src/validator.js"(exports2) {
    "use strict";
    var util = require_util();
    var defaultOptions = {
      allowBooleanAttributes: false,
      //A tag can have attributes without any value
      unpairedTags: []
    };
    exports2.validate = function(xmlData, options) {
      options = Object.assign({}, defaultOptions, options);
      const tags = [];
      let tagFound = false;
      let reachedRoot = false;
      if (xmlData[0] === "\uFEFF") {
        xmlData = xmlData.substr(1);
      }
      for (let i = 0; i < xmlData.length; i++) {
        if (xmlData[i] === "<" && xmlData[i + 1] === "?") {
          i += 2;
          i = readPI(xmlData, i);
          if (i.err) return i;
        } else if (xmlData[i] === "<") {
          let tagStartPos = i;
          i++;
          if (xmlData[i] === "!") {
            i = readCommentAndCDATA(xmlData, i);
            continue;
          } else {
            let closingTag = false;
            if (xmlData[i] === "/") {
              closingTag = true;
              i++;
            }
            let tagName = "";
            for (; i < xmlData.length && xmlData[i] !== ">" && xmlData[i] !== " " && xmlData[i] !== "	" && xmlData[i] !== "\n" && xmlData[i] !== "\r"; i++) {
              tagName += xmlData[i];
            }
            tagName = tagName.trim();
            if (tagName[tagName.length - 1] === "/") {
              tagName = tagName.substring(0, tagName.length - 1);
              i--;
            }
            if (!validateTagName(tagName)) {
              let msg;
              if (tagName.trim().length === 0) {
                msg = "Invalid space after '<'.";
              } else {
                msg = "Tag '" + tagName + "' is an invalid name.";
              }
              return getErrorObject("InvalidTag", msg, getLineNumberForPosition(xmlData, i));
            }
            const result = readAttributeStr(xmlData, i);
            if (result === false) {
              return getErrorObject("InvalidAttr", "Attributes for '" + tagName + "' have open quote.", getLineNumberForPosition(xmlData, i));
            }
            let attrStr = result.value;
            i = result.index;
            if (attrStr[attrStr.length - 1] === "/") {
              const attrStrStart = i - attrStr.length;
              attrStr = attrStr.substring(0, attrStr.length - 1);
              const isValid = validateAttributeString(attrStr, options);
              if (isValid === true) {
                tagFound = true;
              } else {
                return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));
              }
            } else if (closingTag) {
              if (!result.tagClosed) {
                return getErrorObject("InvalidTag", "Closing tag '" + tagName + "' doesn't have proper closing.", getLineNumberForPosition(xmlData, i));
              } else if (attrStr.trim().length > 0) {
                return getErrorObject("InvalidTag", "Closing tag '" + tagName + "' can't have attributes or invalid starting.", getLineNumberForPosition(xmlData, tagStartPos));
              } else if (tags.length === 0) {
                return getErrorObject("InvalidTag", "Closing tag '" + tagName + "' has not been opened.", getLineNumberForPosition(xmlData, tagStartPos));
              } else {
                const otg = tags.pop();
                if (tagName !== otg.tagName) {
                  let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);
                  return getErrorObject(
                    "InvalidTag",
                    "Expected closing tag '" + otg.tagName + "' (opened in line " + openPos.line + ", col " + openPos.col + ") instead of closing tag '" + tagName + "'.",
                    getLineNumberForPosition(xmlData, tagStartPos)
                  );
                }
                if (tags.length == 0) {
                  reachedRoot = true;
                }
              }
            } else {
              const isValid = validateAttributeString(attrStr, options);
              if (isValid !== true) {
                return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));
              }
              if (reachedRoot === true) {
                return getErrorObject("InvalidXml", "Multiple possible root nodes found.", getLineNumberForPosition(xmlData, i));
              } else if (options.unpairedTags.indexOf(tagName) !== -1) {
              } else {
                tags.push({ tagName, tagStartPos });
              }
              tagFound = true;
            }
            for (i++; i < xmlData.length; i++) {
              if (xmlData[i] === "<") {
                if (xmlData[i + 1] === "!") {
                  i++;
                  i = readCommentAndCDATA(xmlData, i);
                  continue;
                } else if (xmlData[i + 1] === "?") {
                  i = readPI(xmlData, ++i);
                  if (i.err) return i;
                } else {
                  break;
                }
              } else if (xmlData[i] === "&") {
                const afterAmp = validateAmpersand(xmlData, i);
                if (afterAmp == -1)
                  return getErrorObject("InvalidChar", "char '&' is not expected.", getLineNumberForPosition(xmlData, i));
                i = afterAmp;
              } else {
                if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {
                  return getErrorObject("InvalidXml", "Extra text at the end", getLineNumberForPosition(xmlData, i));
                }
              }
            }
            if (xmlData[i] === "<") {
              i--;
            }
          }
        } else {
          if (isWhiteSpace(xmlData[i])) {
            continue;
          }
          return getErrorObject("InvalidChar", "char '" + xmlData[i] + "' is not expected.", getLineNumberForPosition(xmlData, i));
        }
      }
      if (!tagFound) {
        return getErrorObject("InvalidXml", "Start tag expected.", 1);
      } else if (tags.length == 1) {
        return getErrorObject("InvalidTag", "Unclosed tag '" + tags[0].tagName + "'.", getLineNumberForPosition(xmlData, tags[0].tagStartPos));
      } else if (tags.length > 0) {
        return getErrorObject("InvalidXml", "Invalid '" + JSON.stringify(tags.map((t) => t.tagName), null, 4).replace(/\r?\n/g, "") + "' found.", { line: 1, col: 1 });
      }
      return true;
    };
    function isWhiteSpace(char) {
      return char === " " || char === "	" || char === "\n" || char === "\r";
    }
    function readPI(xmlData, i) {
      const start = i;
      for (; i < xmlData.length; i++) {
        if (xmlData[i] == "?" || xmlData[i] == " ") {
          const tagname = xmlData.substr(start, i - start);
          if (i > 5 && tagname === "xml") {
            return getErrorObject("InvalidXml", "XML declaration allowed only at the start of the document.", getLineNumberForPosition(xmlData, i));
          } else if (xmlData[i] == "?" && xmlData[i + 1] == ">") {
            i++;
            break;
          } else {
            continue;
          }
        }
      }
      return i;
    }
    function readCommentAndCDATA(xmlData, i) {
      if (xmlData.length > i + 5 && xmlData[i + 1] === "-" && xmlData[i + 2] === "-") {
        for (i += 3; i < xmlData.length; i++) {
          if (xmlData[i] === "-" && xmlData[i + 1] === "-" && xmlData[i + 2] === ">") {
            i += 2;
            break;
          }
        }
      } else if (xmlData.length > i + 8 && xmlData[i + 1] === "D" && xmlData[i + 2] === "O" && xmlData[i + 3] === "C" && xmlData[i + 4] === "T" && xmlData[i + 5] === "Y" && xmlData[i + 6] === "P" && xmlData[i + 7] === "E") {
        let angleBracketsCount = 1;
        for (i += 8; i < xmlData.length; i++) {
          if (xmlData[i] === "<") {
            angleBracketsCount++;
          } else if (xmlData[i] === ">") {
            angleBracketsCount--;
            if (angleBracketsCount === 0) {
              break;
            }
          }
        }
      } else if (xmlData.length > i + 9 && xmlData[i + 1] === "[" && xmlData[i + 2] === "C" && xmlData[i + 3] === "D" && xmlData[i + 4] === "A" && xmlData[i + 5] === "T" && xmlData[i + 6] === "A" && xmlData[i + 7] === "[") {
        for (i += 8; i < xmlData.length; i++) {
          if (xmlData[i] === "]" && xmlData[i + 1] === "]" && xmlData[i + 2] === ">") {
            i += 2;
            break;
          }
        }
      }
      return i;
    }
    var doubleQuote = '"';
    var singleQuote = "'";
    function readAttributeStr(xmlData, i) {
      let attrStr = "";
      let startChar = "";
      let tagClosed = false;
      for (; i < xmlData.length; i++) {
        if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {
          if (startChar === "") {
            startChar = xmlData[i];
          } else if (startChar !== xmlData[i]) {
          } else {
            startChar = "";
          }
        } else if (xmlData[i] === ">") {
          if (startChar === "") {
            tagClosed = true;
            break;
          }
        }
        attrStr += xmlData[i];
      }
      if (startChar !== "") {
        return false;
      }
      return {
        value: attrStr,
        index: i,
        tagClosed
      };
    }
    var validAttrStrRegxp = new RegExp(`(\\s*)([^\\s=]+)(\\s*=)?(\\s*(['"])(([\\s\\S])*?)\\5)?`, "g");
    function validateAttributeString(attrStr, options) {
      const matches = util.getAllMatches(attrStr, validAttrStrRegxp);
      const attrNames = {};
      for (let i = 0; i < matches.length; i++) {
        if (matches[i][1].length === 0) {
          return getErrorObject("InvalidAttr", "Attribute '" + matches[i][2] + "' has no space in starting.", getPositionFromMatch(matches[i]));
        } else if (matches[i][3] !== void 0 && matches[i][4] === void 0) {
          return getErrorObject("InvalidAttr", "Attribute '" + matches[i][2] + "' is without value.", getPositionFromMatch(matches[i]));
        } else if (matches[i][3] === void 0 && !options.allowBooleanAttributes) {
          return getErrorObject("InvalidAttr", "boolean attribute '" + matches[i][2] + "' is not allowed.", getPositionFromMatch(matches[i]));
        }
        const attrName = matches[i][2];
        if (!validateAttrName(attrName)) {
          return getErrorObject("InvalidAttr", "Attribute '" + attrName + "' is an invalid name.", getPositionFromMatch(matches[i]));
        }
        if (!attrNames.hasOwnProperty(attrName)) {
          attrNames[attrName] = 1;
        } else {
          return getErrorObject("InvalidAttr", "Attribute '" + attrName + "' is repeated.", getPositionFromMatch(matches[i]));
        }
      }
      return true;
    }
    function validateNumberAmpersand(xmlData, i) {
      let re = /\d/;
      if (xmlData[i] === "x") {
        i++;
        re = /[\da-fA-F]/;
      }
      for (; i < xmlData.length; i++) {
        if (xmlData[i] === ";")
          return i;
        if (!xmlData[i].match(re))
          break;
      }
      return -1;
    }
    function validateAmpersand(xmlData, i) {
      i++;
      if (xmlData[i] === ";")
        return -1;
      if (xmlData[i] === "#") {
        i++;
        return validateNumberAmpersand(xmlData, i);
      }
      let count = 0;
      for (; i < xmlData.length; i++, count++) {
        if (xmlData[i].match(/\w/) && count < 20)
          continue;
        if (xmlData[i] === ";")
          break;
        return -1;
      }
      return i;
    }
    function getErrorObject(code, message, lineNumber) {
      return {
        err: {
          code,
          msg: message,
          line: lineNumber.line || lineNumber,
          col: lineNumber.col
        }
      };
    }
    function validateAttrName(attrName) {
      return util.isName(attrName);
    }
    function validateTagName(tagname) {
      return util.isName(tagname);
    }
    function getLineNumberForPosition(xmlData, index) {
      const lines = xmlData.substring(0, index).split(/\r?\n/);
      return {
        line: lines.length,
        // column number is last line's length + 1, because column numbering starts at 1:
        col: lines[lines.length - 1].length + 1
      };
    }
    function getPositionFromMatch(match) {
      return match.startIndex + match[1].length;
    }
  }
});

// node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js
var require_OptionsBuilder = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js"(exports2) {
    var defaultOptions = {
      preserveOrder: false,
      attributeNamePrefix: "@_",
      attributesGroupName: false,
      textNodeName: "#text",
      ignoreAttributes: true,
      removeNSPrefix: false,
      // remove NS from tag name or attribute name if true
      allowBooleanAttributes: false,
      //a tag can have attributes without any value
      //ignoreRootElement : false,
      parseTagValue: true,
      parseAttributeValue: false,
      trimValues: true,
      //Trim string values of tag and attributes
      cdataPropName: false,
      numberParseOptions: {
        hex: true,
        leadingZeros: true,
        eNotation: true
      },
      tagValueProcessor: function(tagName, val) {
        return val;
      },
      attributeValueProcessor: function(attrName, val) {
        return val;
      },
      stopNodes: [],
      //nested tags will not be parsed even for errors
      alwaysCreateTextNode: false,
      isArray: () => false,
      commentPropName: false,
      unpairedTags: [],
      processEntities: true,
      htmlEntities: false,
      ignoreDeclaration: false,
      ignorePiTags: false,
      transformTagName: false,
      transformAttributeName: false,
      updateTag: function(tagName, jPath, attrs) {
        return tagName;
      }
      // skipEmptyListItem: false
    };
    var buildOptions = function(options) {
      return Object.assign({}, defaultOptions, options);
    };
    exports2.buildOptions = buildOptions;
    exports2.defaultOptions = defaultOptions;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/xmlNode.js
var require_xmlNode = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/xmlNode.js"(exports2, module2) {
    "use strict";
    var XmlNode = class {
      constructor(tagname) {
        this.tagname = tagname;
        this.child = [];
        this[":@"] = {};
      }
      add(key, val) {
        if (key === "__proto__") key = "#__proto__";
        this.child.push({ [key]: val });
      }
      addChild(node) {
        if (node.tagname === "__proto__") node.tagname = "#__proto__";
        if (node[":@"] && Object.keys(node[":@"]).length > 0) {
          this.child.push({ [node.tagname]: node.child, [":@"]: node[":@"] });
        } else {
          this.child.push({ [node.tagname]: node.child });
        }
      }
    };
    module2.exports = XmlNode;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js
var require_DocTypeReader = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js"(exports2, module2) {
    var util = require_util();
    function readDocType(xmlData, i) {
      const entities = {};
      if (xmlData[i + 3] === "O" && xmlData[i + 4] === "C" && xmlData[i + 5] === "T" && xmlData[i + 6] === "Y" && xmlData[i + 7] === "P" && xmlData[i + 8] === "E") {
        i = i + 9;
        let angleBracketsCount = 1;
        let hasBody = false, comment = false;
        let exp = "";
        for (; i < xmlData.length; i++) {
          if (xmlData[i] === "<" && !comment) {
            if (hasBody && isEntity(xmlData, i)) {
              i += 7;
              let entityName, val;
              [entityName, val, i] = readEntityExp(xmlData, i + 1);
              if (val.indexOf("&") === -1)
                entities[validateEntityName(entityName)] = {
                  regx: RegExp(`&${entityName};`, "g"),
                  val
                };
            } else if (hasBody && isElement(xmlData, i)) i += 8;
            else if (hasBody && isAttlist(xmlData, i)) i += 8;
            else if (hasBody && isNotation(xmlData, i)) i += 9;
            else if (isComment) comment = true;
            else throw new Error("Invalid DOCTYPE");
            angleBracketsCount++;
            exp = "";
          } else if (xmlData[i] === ">") {
            if (comment) {
              if (xmlData[i - 1] === "-" && xmlData[i - 2] === "-") {
                comment = false;
                angleBracketsCount--;
              }
            } else {
              angleBracketsCount--;
            }
            if (angleBracketsCount === 0) {
              break;
            }
          } else if (xmlData[i] === "[") {
            hasBody = true;
          } else {
            exp += xmlData[i];
          }
        }
        if (angleBracketsCount !== 0) {
          throw new Error(`Unclosed DOCTYPE`);
        }
      } else {
        throw new Error(`Invalid Tag instead of DOCTYPE`);
      }
      return { entities, i };
    }
    function readEntityExp(xmlData, i) {
      let entityName = "";
      for (; i < xmlData.length && (xmlData[i] !== "'" && xmlData[i] !== '"'); i++) {
        entityName += xmlData[i];
      }
      entityName = entityName.trim();
      if (entityName.indexOf(" ") !== -1) throw new Error("External entites are not supported");
      const startChar = xmlData[i++];
      let val = "";
      for (; i < xmlData.length && xmlData[i] !== startChar; i++) {
        val += xmlData[i];
      }
      return [entityName, val, i];
    }
    function isComment(xmlData, i) {
      if (xmlData[i + 1] === "!" && xmlData[i + 2] === "-" && xmlData[i + 3] === "-") return true;
      return false;
    }
    function isEntity(xmlData, i) {
      if (xmlData[i + 1] === "!" && xmlData[i + 2] === "E" && xmlData[i + 3] === "N" && xmlData[i + 4] === "T" && xmlData[i + 5] === "I" && xmlData[i + 6] === "T" && xmlData[i + 7] === "Y") return true;
      return false;
    }
    function isElement(xmlData, i) {
      if (xmlData[i + 1] === "!" && xmlData[i + 2] === "E" && xmlData[i + 3] === "L" && xmlData[i + 4] === "E" && xmlData[i + 5] === "M" && xmlData[i + 6] === "E" && xmlData[i + 7] === "N" && xmlData[i + 8] === "T") return true;
      return false;
    }
    function isAttlist(xmlData, i) {
      if (xmlData[i + 1] === "!" && xmlData[i + 2] === "A" && xmlData[i + 3] === "T" && xmlData[i + 4] === "T" && xmlData[i + 5] === "L" && xmlData[i + 6] === "I" && xmlData[i + 7] === "S" && xmlData[i + 8] === "T") return true;
      return false;
    }
    function isNotation(xmlData, i) {
      if (xmlData[i + 1] === "!" && xmlData[i + 2] === "N" && xmlData[i + 3] === "O" && xmlData[i + 4] === "T" && xmlData[i + 5] === "A" && xmlData[i + 6] === "T" && xmlData[i + 7] === "I" && xmlData[i + 8] === "O" && xmlData[i + 9] === "N") return true;
      return false;
    }
    function validateEntityName(name) {
      if (util.isName(name))
        return name;
      else
        throw new Error(`Invalid entity name ${name}`);
    }
    module2.exports = readDocType;
  }
});

// node_modules/strnum/strnum.js
var require_strnum = __commonJS({
  "node_modules/strnum/strnum.js"(exports2, module2) {
    var hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;
    var numRegex = /^([\-\+])?(0*)([0-9]*(\.[0-9]*)?)$/;
    var consider = {
      hex: true,
      // oct: false,
      leadingZeros: true,
      decimalPoint: ".",
      eNotation: true
      //skipLike: /regex/
    };
    function toNumber(str, options = {}) {
      options = Object.assign({}, consider, options);
      if (!str || typeof str !== "string") return str;
      let trimmedStr = str.trim();
      if (options.skipLike !== void 0 && options.skipLike.test(trimmedStr)) return str;
      else if (str === "0") return 0;
      else if (options.hex && hexRegex.test(trimmedStr)) {
        return parse_int(trimmedStr, 16);
      } else if (trimmedStr.search(/[eE]/) !== -1) {
        const notation = trimmedStr.match(/^([-\+])?(0*)([0-9]*(\.[0-9]*)?[eE][-\+]?[0-9]+)$/);
        if (notation) {
          if (options.leadingZeros) {
            trimmedStr = (notation[1] || "") + notation[3];
          } else {
            if (notation[2] === "0" && notation[3][0] === ".") {
            } else {
              return str;
            }
          }
          return options.eNotation ? Number(trimmedStr) : str;
        } else {
          return str;
        }
      } else {
        const match = numRegex.exec(trimmedStr);
        if (match) {
          const sign = match[1];
          const leadingZeros = match[2];
          let numTrimmedByZeros = trimZeros(match[3]);
          if (!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== ".") return str;
          else if (!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== ".") return str;
          else if (options.leadingZeros && leadingZeros === str) return 0;
          else {
            const num = Number(trimmedStr);
            const numStr = "" + num;
            if (numStr.search(/[eE]/) !== -1) {
              if (options.eNotation) return num;
              else return str;
            } else if (trimmedStr.indexOf(".") !== -1) {
              if (numStr === "0" && numTrimmedByZeros === "") return num;
              else if (numStr === numTrimmedByZeros) return num;
              else if (sign && numStr === "-" + numTrimmedByZeros) return num;
              else return str;
            }
            if (leadingZeros) {
              return numTrimmedByZeros === numStr || sign + numTrimmedByZeros === numStr ? num : str;
            } else {
              return trimmedStr === numStr || trimmedStr === sign + numStr ? num : str;
            }
          }
        } else {
          return str;
        }
      }
    }
    function trimZeros(numStr) {
      if (numStr && numStr.indexOf(".") !== -1) {
        numStr = numStr.replace(/0+$/, "");
        if (numStr === ".") numStr = "0";
        else if (numStr[0] === ".") numStr = "0" + numStr;
        else if (numStr[numStr.length - 1] === ".") numStr = numStr.substr(0, numStr.length - 1);
        return numStr;
      }
      return numStr;
    }
    function parse_int(numStr, base) {
      if (parseInt) return parseInt(numStr, base);
      else if (Number.parseInt) return Number.parseInt(numStr, base);
      else if (window && window.parseInt) return window.parseInt(numStr, base);
      else throw new Error("parseInt, Number.parseInt, window.parseInt are not supported");
    }
    module2.exports = toNumber;
  }
});

// node_modules/fast-xml-parser/src/ignoreAttributes.js
var require_ignoreAttributes = __commonJS({
  "node_modules/fast-xml-parser/src/ignoreAttributes.js"(exports2, module2) {
    function getIgnoreAttributesFn(ignoreAttributes) {
      if (typeof ignoreAttributes === "function") {
        return ignoreAttributes;
      }
      if (Array.isArray(ignoreAttributes)) {
        return (attrName) => {
          for (const pattern of ignoreAttributes) {
            if (typeof pattern === "string" && attrName === pattern) {
              return true;
            }
            if (pattern instanceof RegExp && pattern.test(attrName)) {
              return true;
            }
          }
        };
      }
      return () => false;
    }
    module2.exports = getIgnoreAttributesFn;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js
var require_OrderedObjParser = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js"(exports2, module2) {
    "use strict";
    var util = require_util();
    var xmlNode = require_xmlNode();
    var readDocType = require_DocTypeReader();
    var toNumber = require_strnum();
    var getIgnoreAttributesFn = require_ignoreAttributes();
    var OrderedObjParser = class {
      constructor(options) {
        this.options = options;
        this.currentNode = null;
        this.tagsNodeStack = [];
        this.docTypeEntities = {};
        this.lastEntities = {
          "apos": { regex: /&(apos|#39|#x27);/g, val: "'" },
          "gt": { regex: /&(gt|#62|#x3E);/g, val: ">" },
          "lt": { regex: /&(lt|#60|#x3C);/g, val: "<" },
          "quot": { regex: /&(quot|#34|#x22);/g, val: '"' }
        };
        this.ampEntity = { regex: /&(amp|#38|#x26);/g, val: "&" };
        this.htmlEntities = {
          "space": { regex: /&(nbsp|#160);/g, val: " " },
          // "lt" : { regex: /&(lt|#60);/g, val: "<" },
          // "gt" : { regex: /&(gt|#62);/g, val: ">" },
          // "amp" : { regex: /&(amp|#38);/g, val: "&" },
          // "quot" : { regex: /&(quot|#34);/g, val: "\"" },
          // "apos" : { regex: /&(apos|#39);/g, val: "'" },
          "cent": { regex: /&(cent|#162);/g, val: "\xA2" },
          "pound": { regex: /&(pound|#163);/g, val: "\xA3" },
          "yen": { regex: /&(yen|#165);/g, val: "\xA5" },
          "euro": { regex: /&(euro|#8364);/g, val: "\u20AC" },
          "copyright": { regex: /&(copy|#169);/g, val: "\xA9" },
          "reg": { regex: /&(reg|#174);/g, val: "\xAE" },
          "inr": { regex: /&(inr|#8377);/g, val: "\u20B9" },
          "num_dec": { regex: /&#([0-9]{1,7});/g, val: (_, str) => String.fromCharCode(Number.parseInt(str, 10)) },
          "num_hex": { regex: /&#x([0-9a-fA-F]{1,6});/g, val: (_, str) => String.fromCharCode(Number.parseInt(str, 16)) }
        };
        this.addExternalEntities = addExternalEntities;
        this.parseXml = parseXml;
        this.parseTextData = parseTextData;
        this.resolveNameSpace = resolveNameSpace;
        this.buildAttributesMap = buildAttributesMap;
        this.isItStopNode = isItStopNode;
        this.replaceEntitiesValue = replaceEntitiesValue;
        this.readStopNodeData = readStopNodeData;
        this.saveTextToParentTag = saveTextToParentTag;
        this.addChild = addChild;
        this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes);
      }
    };
    function addExternalEntities(externalEntities) {
      const entKeys = Object.keys(externalEntities);
      for (let i = 0; i < entKeys.length; i++) {
        const ent = entKeys[i];
        this.lastEntities[ent] = {
          regex: new RegExp("&" + ent + ";", "g"),
          val: externalEntities[ent]
        };
      }
    }
    function parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {
      if (val !== void 0) {
        if (this.options.trimValues && !dontTrim) {
          val = val.trim();
        }
        if (val.length > 0) {
          if (!escapeEntities) val = this.replaceEntitiesValue(val);
          const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);
          if (newval === null || newval === void 0) {
            return val;
          } else if (typeof newval !== typeof val || newval !== val) {
            return newval;
          } else if (this.options.trimValues) {
            return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);
          } else {
            const trimmedVal = val.trim();
            if (trimmedVal === val) {
              return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);
            } else {
              return val;
            }
          }
        }
      }
    }
    function resolveNameSpace(tagname) {
      if (this.options.removeNSPrefix) {
        const tags = tagname.split(":");
        const prefix = tagname.charAt(0) === "/" ? "/" : "";
        if (tags[0] === "xmlns") {
          return "";
        }
        if (tags.length === 2) {
          tagname = prefix + tags[1];
        }
      }
      return tagname;
    }
    var attrsRegx = new RegExp(`([^\\s=]+)\\s*(=\\s*(['"])([\\s\\S]*?)\\3)?`, "gm");
    function buildAttributesMap(attrStr, jPath, tagName) {
      if (this.options.ignoreAttributes !== true && typeof attrStr === "string") {
        const matches = util.getAllMatches(attrStr, attrsRegx);
        const len = matches.length;
        const attrs = {};
        for (let i = 0; i < len; i++) {
          const attrName = this.resolveNameSpace(matches[i][1]);
          if (this.ignoreAttributesFn(attrName, jPath)) {
            continue;
          }
          let oldVal = matches[i][4];
          let aName = this.options.attributeNamePrefix + attrName;
          if (attrName.length) {
            if (this.options.transformAttributeName) {
              aName = this.options.transformAttributeName(aName);
            }
            if (aName === "__proto__") aName = "#__proto__";
            if (oldVal !== void 0) {
              if (this.options.trimValues) {
                oldVal = oldVal.trim();
              }
              oldVal = this.replaceEntitiesValue(oldVal);
              const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);
              if (newVal === null || newVal === void 0) {
                attrs[aName] = oldVal;
              } else if (typeof newVal !== typeof oldVal || newVal !== oldVal) {
                attrs[aName] = newVal;
              } else {
                attrs[aName] = parseValue(
                  oldVal,
                  this.options.parseAttributeValue,
                  this.options.numberParseOptions
                );
              }
            } else if (this.options.allowBooleanAttributes) {
              attrs[aName] = true;
            }
          }
        }
        if (!Object.keys(attrs).length) {
          return;
        }
        if (this.options.attributesGroupName) {
          const attrCollection = {};
          attrCollection[this.options.attributesGroupName] = attrs;
          return attrCollection;
        }
        return attrs;
      }
    }
    var parseXml = function(xmlData) {
      xmlData = xmlData.replace(/\r\n?/g, "\n");
      const xmlObj = new xmlNode("!xml");
      let currentNode = xmlObj;
      let textData = "";
      let jPath = "";
      for (let i = 0; i < xmlData.length; i++) {
        const ch = xmlData[i];
        if (ch === "<") {
          if (xmlData[i + 1] === "/") {
            const closeIndex = findClosingIndex(xmlData, ">", i, "Closing Tag is not closed.");
            let tagName = xmlData.substring(i + 2, closeIndex).trim();
            if (this.options.removeNSPrefix) {
              const colonIndex = tagName.indexOf(":");
              if (colonIndex !== -1) {
                tagName = tagName.substr(colonIndex + 1);
              }
            }
            if (this.options.transformTagName) {
              tagName = this.options.transformTagName(tagName);
            }
            if (currentNode) {
              textData = this.saveTextToParentTag(textData, currentNode, jPath);
            }
            const lastTagName = jPath.substring(jPath.lastIndexOf(".") + 1);
            if (tagName && this.options.unpairedTags.indexOf(tagName) !== -1) {
              throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);
            }
            let propIndex = 0;
            if (lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1) {
              propIndex = jPath.lastIndexOf(".", jPath.lastIndexOf(".") - 1);
              this.tagsNodeStack.pop();
            } else {
              propIndex = jPath.lastIndexOf(".");
            }
            jPath = jPath.substring(0, propIndex);
            currentNode = this.tagsNodeStack.pop();
            textData = "";
            i = closeIndex;
          } else if (xmlData[i + 1] === "?") {
            let tagData = readTagExp(xmlData, i, false, "?>");
            if (!tagData) throw new Error("Pi Tag is not closed.");
            textData = this.saveTextToParentTag(textData, currentNode, jPath);
            if (this.options.ignoreDeclaration && tagData.tagName === "?xml" || this.options.ignorePiTags) {
            } else {
              const childNode = new xmlNode(tagData.tagName);
              childNode.add(this.options.textNodeName, "");
              if (tagData.tagName !== tagData.tagExp && tagData.attrExpPresent) {
                childNode[":@"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);
              }
              this.addChild(currentNode, childNode, jPath);
            }
            i = tagData.closeIndex + 1;
          } else if (xmlData.substr(i + 1, 3) === "!--") {
            const endIndex = findClosingIndex(xmlData, "-->", i + 4, "Comment is not closed.");
            if (this.options.commentPropName) {
              const comment = xmlData.substring(i + 4, endIndex - 2);
              textData = this.saveTextToParentTag(textData, currentNode, jPath);
              currentNode.add(this.options.commentPropName, [{ [this.options.textNodeName]: comment }]);
            }
            i = endIndex;
          } else if (xmlData.substr(i + 1, 2) === "!D") {
            const result = readDocType(xmlData, i);
            this.docTypeEntities = result.entities;
            i = result.i;
          } else if (xmlData.substr(i + 1, 2) === "![") {
            const closeIndex = findClosingIndex(xmlData, "]]>", i, "CDATA is not closed.") - 2;
            const tagExp = xmlData.substring(i + 9, closeIndex);
            textData = this.saveTextToParentTag(textData, currentNode, jPath);
            let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);
            if (val == void 0) val = "";
            if (this.options.cdataPropName) {
              currentNode.add(this.options.cdataPropName, [{ [this.options.textNodeName]: tagExp }]);
            } else {
              currentNode.add(this.options.textNodeName, val);
            }
            i = closeIndex + 2;
          } else {
            let result = readTagExp(xmlData, i, this.options.removeNSPrefix);
            let tagName = result.tagName;
            const rawTagName = result.rawTagName;
            let tagExp = result.tagExp;
            let attrExpPresent = result.attrExpPresent;
            let closeIndex = result.closeIndex;
            if (this.options.transformTagName) {
              tagName = this.options.transformTagName(tagName);
            }
            if (currentNode && textData) {
              if (currentNode.tagname !== "!xml") {
                textData = this.saveTextToParentTag(textData, currentNode, jPath, false);
              }
            }
            const lastTag = currentNode;
            if (lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1) {
              currentNode = this.tagsNodeStack.pop();
              jPath = jPath.substring(0, jPath.lastIndexOf("."));
            }
            if (tagName !== xmlObj.tagname) {
              jPath += jPath ? "." + tagName : tagName;
            }
            if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {
              let tagContent = "";
              if (tagExp.length > 0 && tagExp.lastIndexOf("/") === tagExp.length - 1) {
                if (tagName[tagName.length - 1] === "/") {
                  tagName = tagName.substr(0, tagName.length - 1);
                  jPath = jPath.substr(0, jPath.length - 1);
                  tagExp = tagName;
                } else {
                  tagExp = tagExp.substr(0, tagExp.length - 1);
                }
                i = result.closeIndex;
              } else if (this.options.unpairedTags.indexOf(tagName) !== -1) {
                i = result.closeIndex;
              } else {
                const result2 = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);
                if (!result2) throw new Error(`Unexpected end of ${rawTagName}`);
                i = result2.i;
                tagContent = result2.tagContent;
              }
              const childNode = new xmlNode(tagName);
              if (tagName !== tagExp && attrExpPresent) {
                childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName);
              }
              if (tagContent) {
                tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);
              }
              jPath = jPath.substr(0, jPath.lastIndexOf("."));
              childNode.add(this.options.textNodeName, tagContent);
              this.addChild(currentNode, childNode, jPath);
            } else {
              if (tagExp.length > 0 && tagExp.lastIndexOf("/") === tagExp.length - 1) {
                if (tagName[tagName.length - 1] === "/") {
                  tagName = tagName.substr(0, tagName.length - 1);
                  jPath = jPath.substr(0, jPath.length - 1);
                  tagExp = tagName;
                } else {
                  tagExp = tagExp.substr(0, tagExp.length - 1);
                }
                if (this.options.transformTagName) {
                  tagName = this.options.transformTagName(tagName);
                }
                const childNode = new xmlNode(tagName);
                if (tagName !== tagExp && attrExpPresent) {
                  childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName);
                }
                this.addChild(currentNode, childNode, jPath);
                jPath = jPath.substr(0, jPath.lastIndexOf("."));
              } else {
                const childNode = new xmlNode(tagName);
                this.tagsNodeStack.push(currentNode);
                if (tagName !== tagExp && attrExpPresent) {
                  childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName);
                }
                this.addChild(currentNode, childNode, jPath);
                currentNode = childNode;
              }
              textData = "";
              i = closeIndex;
            }
          }
        } else {
          textData += xmlData[i];
        }
      }
      return xmlObj.child;
    };
    function addChild(currentNode, childNode, jPath) {
      const result = this.options.updateTag(childNode.tagname, jPath, childNode[":@"]);
      if (result === false) {
      } else if (typeof result === "string") {
        childNode.tagname = result;
        currentNode.addChild(childNode);
      } else {
        currentNode.addChild(childNode);
      }
    }
    var replaceEntitiesValue = function(val) {
      if (this.options.processEntities) {
        for (let entityName in this.docTypeEntities) {
          const entity = this.docTypeEntities[entityName];
          val = val.replace(entity.regx, entity.val);
        }
        for (let entityName in this.lastEntities) {
          const entity = this.lastEntities[entityName];
          val = val.replace(entity.regex, entity.val);
        }
        if (this.options.htmlEntities) {
          for (let entityName in this.htmlEntities) {
            const entity = this.htmlEntities[entityName];
            val = val.replace(entity.regex, entity.val);
          }
        }
        val = val.replace(this.ampEntity.regex, this.ampEntity.val);
      }
      return val;
    };
    function saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {
      if (textData) {
        if (isLeafNode === void 0) isLeafNode = currentNode.child.length === 0;
        textData = this.parseTextData(
          textData,
          currentNode.tagname,
          jPath,
          false,
          currentNode[":@"] ? Object.keys(currentNode[":@"]).length !== 0 : false,
          isLeafNode
        );
        if (textData !== void 0 && textData !== "")
          currentNode.add(this.options.textNodeName, textData);
        textData = "";
      }
      return textData;
    }
    function isItStopNode(stopNodes, jPath, currentTagName) {
      const allNodesExp = "*." + currentTagName;
      for (const stopNodePath in stopNodes) {
        const stopNodeExp = stopNodes[stopNodePath];
        if (allNodesExp === stopNodeExp || jPath === stopNodeExp) return true;
      }
      return false;
    }
    function tagExpWithClosingIndex(xmlData, i, closingChar = ">") {
      let attrBoundary;
      let tagExp = "";
      for (let index = i; index < xmlData.length; index++) {
        let ch = xmlData[index];
        if (attrBoundary) {
          if (ch === attrBoundary) attrBoundary = "";
        } else if (ch === '"' || ch === "'") {
          attrBoundary = ch;
        } else if (ch === closingChar[0]) {
          if (closingChar[1]) {
            if (xmlData[index + 1] === closingChar[1]) {
              return {
                data: tagExp,
                index
              };
            }
          } else {
            return {
              data: tagExp,
              index
            };
          }
        } else if (ch === "	") {
          ch = " ";
        }
        tagExp += ch;
      }
    }
    function findClosingIndex(xmlData, str, i, errMsg) {
      const closingIndex = xmlData.indexOf(str, i);
      if (closingIndex === -1) {
        throw new Error(errMsg);
      } else {
        return closingIndex + str.length - 1;
      }
    }
    function readTagExp(xmlData, i, removeNSPrefix, closingChar = ">") {
      const result = tagExpWithClosingIndex(xmlData, i + 1, closingChar);
      if (!result) return;
      let tagExp = result.data;
      const closeIndex = result.index;
      const separatorIndex = tagExp.search(/\s/);
      let tagName = tagExp;
      let attrExpPresent = true;
      if (separatorIndex !== -1) {
        tagName = tagExp.substring(0, separatorIndex);
        tagExp = tagExp.substring(separatorIndex + 1).trimStart();
      }
      const rawTagName = tagName;
      if (removeNSPrefix) {
        const colonIndex = tagName.indexOf(":");
        if (colonIndex !== -1) {
          tagName = tagName.substr(colonIndex + 1);
          attrExpPresent = tagName !== result.data.substr(colonIndex + 1);
        }
      }
      return {
        tagName,
        tagExp,
        closeIndex,
        attrExpPresent,
        rawTagName
      };
    }
    function readStopNodeData(xmlData, tagName, i) {
      const startIndex = i;
      let openTagCount = 1;
      for (; i < xmlData.length; i++) {
        if (xmlData[i] === "<") {
          if (xmlData[i + 1] === "/") {
            const closeIndex = findClosingIndex(xmlData, ">", i, `${tagName} is not closed`);
            let closeTagName = xmlData.substring(i + 2, closeIndex).trim();
            if (closeTagName === tagName) {
              openTagCount--;
              if (openTagCount === 0) {
                return {
                  tagContent: xmlData.substring(startIndex, i),
                  i: closeIndex
                };
              }
            }
            i = closeIndex;
          } else if (xmlData[i + 1] === "?") {
            const closeIndex = findClosingIndex(xmlData, "?>", i + 1, "StopNode is not closed.");
            i = closeIndex;
          } else if (xmlData.substr(i + 1, 3) === "!--") {
            const closeIndex = findClosingIndex(xmlData, "-->", i + 3, "StopNode is not closed.");
            i = closeIndex;
          } else if (xmlData.substr(i + 1, 2) === "![") {
            const closeIndex = findClosingIndex(xmlData, "]]>", i, "StopNode is not closed.") - 2;
            i = closeIndex;
          } else {
            const tagData = readTagExp(xmlData, i, ">");
            if (tagData) {
              const openTagName = tagData && tagData.tagName;
              if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length - 1] !== "/") {
                openTagCount++;
              }
              i = tagData.closeIndex;
            }
          }
        }
      }
    }
    function parseValue(val, shouldParse, options) {
      if (shouldParse && typeof val === "string") {
        const newval = val.trim();
        if (newval === "true") return true;
        else if (newval === "false") return false;
        else return toNumber(val, options);
      } else {
        if (util.isExist(val)) {
          return val;
        } else {
          return "";
        }
      }
    }
    module2.exports = OrderedObjParser;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/node2json.js
var require_node2json = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/node2json.js"(exports2) {
    "use strict";
    function prettify(node, options) {
      return compress(node, options);
    }
    function compress(arr, options, jPath) {
      let text;
      const compressedObj = {};
      for (let i = 0; i < arr.length; i++) {
        const tagObj = arr[i];
        const property = propName2(tagObj);
        let newJpath = "";
        if (jPath === void 0) newJpath = property;
        else newJpath = jPath + "." + property;
        if (property === options.textNodeName) {
          if (text === void 0) text = tagObj[property];
          else text += "" + tagObj[property];
        } else if (property === void 0) {
          continue;
        } else if (tagObj[property]) {
          let val = compress(tagObj[property], options, newJpath);
          const isLeaf = isLeafTag(val, options);
          if (tagObj[":@"]) {
            assignAttributes(val, tagObj[":@"], newJpath, options);
          } else if (Object.keys(val).length === 1 && val[options.textNodeName] !== void 0 && !options.alwaysCreateTextNode) {
            val = val[options.textNodeName];
          } else if (Object.keys(val).length === 0) {
            if (options.alwaysCreateTextNode) val[options.textNodeName] = "";
            else val = "";
          }
          if (compressedObj[property] !== void 0 && compressedObj.hasOwnProperty(property)) {
            if (!Array.isArray(compressedObj[property])) {
              compressedObj[property] = [compressedObj[property]];
            }
            compressedObj[property].push(val);
          } else {
            if (options.isArray(property, newJpath, isLeaf)) {
              compressedObj[property] = [val];
            } else {
              compressedObj[property] = val;
            }
          }
        }
      }
      if (typeof text === "string") {
        if (text.length > 0) compressedObj[options.textNodeName] = text;
      } else if (text !== void 0) compressedObj[options.textNodeName] = text;
      return compressedObj;
    }
    function propName2(obj) {
      const keys = Object.keys(obj);
      for (let i = 0; i < keys.length; i++) {
        const key = keys[i];
        if (key !== ":@") return key;
      }
    }
    function assignAttributes(obj, attrMap, jpath, options) {
      if (attrMap) {
        const keys = Object.keys(attrMap);
        const len = keys.length;
        for (let i = 0; i < len; i++) {
          const atrrName = keys[i];
          if (options.isArray(atrrName, jpath + "." + atrrName, true, true)) {
            obj[atrrName] = [attrMap[atrrName]];
          } else {
            obj[atrrName] = attrMap[atrrName];
          }
        }
      }
    }
    function isLeafTag(obj, options) {
      const { textNodeName } = options;
      const propCount = Object.keys(obj).length;
      if (propCount === 0) {
        return true;
      }
      if (propCount === 1 && (obj[textNodeName] || typeof obj[textNodeName] === "boolean" || obj[textNodeName] === 0)) {
        return true;
      }
      return false;
    }
    exports2.prettify = prettify;
  }
});

// node_modules/fast-xml-parser/src/xmlparser/XMLParser.js
var require_XMLParser = __commonJS({
  "node_modules/fast-xml-parser/src/xmlparser/XMLParser.js"(exports2, module2) {
    var { buildOptions } = require_OptionsBuilder();
    var OrderedObjParser = require_OrderedObjParser();
    var { prettify } = require_node2json();
    var validator = require_validator();
    var XMLParser = class {
      constructor(options) {
        this.externalEntities = {};
        this.options = buildOptions(options);
      }
      /**
       * Parse XML dats to JS object 
       * @param {string|Buffer} xmlData 
       * @param {boolean|Object} validationOption 
       */
      parse(xmlData, validationOption) {
        if (typeof xmlData === "string") {
        } else if (xmlData.toString) {
          xmlData = xmlData.toString();
        } else {
          throw new Error("XML data is accepted in String or Bytes[] form.");
        }
        if (validationOption) {
          if (validationOption === true) validationOption = {};
          const result = validator.validate(xmlData, validationOption);
          if (result !== true) {
            throw Error(`${result.err.msg}:${result.err.line}:${result.err.col}`);
          }
        }
        const orderedObjParser = new OrderedObjParser(this.options);
        orderedObjParser.addExternalEntities(this.externalEntities);
        const orderedResult = orderedObjParser.parseXml(xmlData);
        if (this.options.preserveOrder || orderedResult === void 0) return orderedResult;
        else return prettify(orderedResult, this.options);
      }
      /**
       * Add Entity which is not by default supported by this library
       * @param {string} key 
       * @param {string} value 
       */
      addEntity(key, value) {
        if (value.indexOf("&") !== -1) {
          throw new Error("Entity value can't have '&'");
        } else if (key.indexOf("&") !== -1 || key.indexOf(";") !== -1) {
          throw new Error("An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'");
        } else if (value === "&") {
          throw new Error("An entity with value '&' is not permitted");
        } else {
          this.externalEntities[key] = value;
        }
      }
    };
    module2.exports = XMLParser;
  }
});

// node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js
var require_orderedJs2Xml = __commonJS({
  "node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js"(exports2, module2) {
    var EOL = "\n";
    function toXml(jArray, options) {
      let indentation = "";
      if (options.format && options.indentBy.length > 0) {
        indentation = EOL;
      }
      return arrToStr(jArray, options, "", indentation);
    }
    function arrToStr(arr, options, jPath, indentation) {
      let xmlStr = "";
      let isPreviousElementTag = false;
      for (let i = 0; i < arr.length; i++) {
        const tagObj = arr[i];
        const tagName = propName2(tagObj);
        if (tagName === void 0) continue;
        let newJPath = "";
        if (jPath.length === 0) newJPath = tagName;
        else newJPath = `${jPath}.${tagName}`;
        if (tagName === options.textNodeName) {
          let tagText = tagObj[tagName];
          if (!isStopNode(newJPath, options)) {
            tagText = options.tagValueProcessor(tagName, tagText);
            tagText = replaceEntitiesValue(tagText, options);
          }
          if (isPreviousElementTag) {
            xmlStr += indentation;
          }
          xmlStr += tagText;
          isPreviousElementTag = false;
          continue;
        } else if (tagName === options.cdataPropName) {
          if (isPreviousElementTag) {
            xmlStr += indentation;
          }
          xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;
          isPreviousElementTag = false;
          continue;
        } else if (tagName === options.commentPropName) {
          xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;
          isPreviousElementTag = true;
          continue;
        } else if (tagName[0] === "?") {
          const attStr2 = attr_to_str(tagObj[":@"], options);
          const tempInd = tagName === "?xml" ? "" : indentation;
          let piTextNodeName = tagObj[tagName][0][options.textNodeName];
          piTextNodeName = piTextNodeName.length !== 0 ? " " + piTextNodeName : "";
          xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr2}?>`;
          isPreviousElementTag = true;
          continue;
        }
        let newIdentation = indentation;
        if (newIdentation !== "") {
          newIdentation += options.indentBy;
        }
        const attStr = attr_to_str(tagObj[":@"], options);
        const tagStart = indentation + `<${tagName}${attStr}`;
        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);
        if (options.unpairedTags.indexOf(tagName) !== -1) {
          if (options.suppressUnpairedNode) xmlStr += tagStart + ">";
          else xmlStr += tagStart + "/>";
        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {
          xmlStr += tagStart + "/>";
        } else if (tagValue && tagValue.endsWith(">")) {
          xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;
        } else {
          xmlStr += tagStart + ">";
          if (tagValue && indentation !== "" && (tagValue.includes("/>") || tagValue.includes("</"))) {
            xmlStr += indentation + options.indentBy + tagValue + indentation;
          } else {
            xmlStr += tagValue;
          }
          xmlStr += `</${tagName}>`;
        }
        isPreviousElementTag = true;
      }
      return xmlStr;
    }
    function propName2(obj) {
      const keys = Object.keys(obj);
      for (let i = 0; i < keys.length; i++) {
        const key = keys[i];
        if (!obj.hasOwnProperty(key)) continue;
        if (key !== ":@") return key;
      }
    }
    function attr_to_str(attrMap, options) {
      let attrStr = "";
      if (attrMap && !options.ignoreAttributes) {
        for (let attr in attrMap) {
          if (!attrMap.hasOwnProperty(attr)) continue;
          let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);
          attrVal = replaceEntitiesValue(attrVal, options);
          if (attrVal === true && options.suppressBooleanAttributes) {
            attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;
          } else {
            attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}="${attrVal}"`;
          }
        }
      }
      return attrStr;
    }
    function isStopNode(jPath, options) {
      jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);
      let tagName = jPath.substr(jPath.lastIndexOf(".") + 1);
      for (let index in options.stopNodes) {
        if (options.stopNodes[index] === jPath || options.stopNodes[index] === "*." + tagName) return true;
      }
      return false;
    }
    function replaceEntitiesValue(textValue, options) {
      if (textValue && textValue.length > 0 && options.processEntities) {
        for (let i = 0; i < options.entities.length; i++) {
          const entity = options.entities[i];
          textValue = textValue.replace(entity.regex, entity.val);
        }
      }
      return textValue;
    }
    module2.exports = toXml;
  }
});

// node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js
var require_json2xml = __commonJS({
  "node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js"(exports2, module2) {
    "use strict";
    var buildFromOrderedJs = require_orderedJs2Xml();
    var getIgnoreAttributesFn = require_ignoreAttributes();
    var defaultOptions = {
      attributeNamePrefix: "@_",
      attributesGroupName: false,
      textNodeName: "#text",
      ignoreAttributes: true,
      cdataPropName: false,
      format: false,
      indentBy: "  ",
      suppressEmptyNode: false,
      suppressUnpairedNode: true,
      suppressBooleanAttributes: true,
      tagValueProcessor: function(key, a) {
        return a;
      },
      attributeValueProcessor: function(attrName, a) {
        return a;
      },
      preserveOrder: false,
      commentPropName: false,
      unpairedTags: [],
      entities: [
        { regex: new RegExp("&", "g"), val: "&amp;" },
        //it must be on top
        { regex: new RegExp(">", "g"), val: "&gt;" },
        { regex: new RegExp("<", "g"), val: "&lt;" },
        { regex: new RegExp("'", "g"), val: "&apos;" },
        { regex: new RegExp('"', "g"), val: "&quot;" }
      ],
      processEntities: true,
      stopNodes: [],
      // transformTagName: false,
      // transformAttributeName: false,
      oneListGroup: false
    };
    function Builder(options) {
      this.options = Object.assign({}, defaultOptions, options);
      if (this.options.ignoreAttributes === true || this.options.attributesGroupName) {
        this.isAttribute = function() {
          return false;
        };
      } else {
        this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes);
        this.attrPrefixLen = this.options.attributeNamePrefix.length;
        this.isAttribute = isAttribute;
      }
      this.processTextOrObjNode = processTextOrObjNode;
      if (this.options.format) {
        this.indentate = indentate;
        this.tagEndChar = ">\n";
        this.newLine = "\n";
      } else {
        this.indentate = function() {
          return "";
        };
        this.tagEndChar = ">";
        this.newLine = "";
      }
    }
    Builder.prototype.build = function(jObj) {
      if (this.options.preserveOrder) {
        return buildFromOrderedJs(jObj, this.options);
      } else {
        if (Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1) {
          jObj = {
            [this.options.arrayNodeName]: jObj
          };
        }
        return this.j2x(jObj, 0, []).val;
      }
    };
    Builder.prototype.j2x = function(jObj, level, ajPath) {
      let attrStr = "";
      let val = "";
      const jPath = ajPath.join(".");
      for (let key in jObj) {
        if (!Object.prototype.hasOwnProperty.call(jObj, key)) continue;
        if (typeof jObj[key] === "undefined") {
          if (this.isAttribute(key)) {
            val += "";
          }
        } else if (jObj[key] === null) {
          if (this.isAttribute(key)) {
            val += "";
          } else if (key === this.options.cdataPropName) {
            val += "";
          } else if (key[0] === "?") {
            val += this.indentate(level) + "<" + key + "?" + this.tagEndChar;
          } else {
            val += this.indentate(level) + "<" + key + "/" + this.tagEndChar;
          }
        } else if (jObj[key] instanceof Date) {
          val += this.buildTextValNode(jObj[key], key, "", level);
        } else if (typeof jObj[key] !== "object") {
          const attr = this.isAttribute(key);
          if (attr && !this.ignoreAttributesFn(attr, jPath)) {
            attrStr += this.buildAttrPairStr(attr, "" + jObj[key]);
          } else if (!attr) {
            if (key === this.options.textNodeName) {
              let newval = this.options.tagValueProcessor(key, "" + jObj[key]);
              val += this.replaceEntitiesValue(newval);
            } else {
              val += this.buildTextValNode(jObj[key], key, "", level);
            }
          }
        } else if (Array.isArray(jObj[key])) {
          const arrLen = jObj[key].length;
          let listTagVal = "";
          let listTagAttr = "";
          for (let j = 0; j < arrLen; j++) {
            const item = jObj[key][j];
            if (typeof item === "undefined") {
            } else if (item === null) {
              if (key[0] === "?") val += this.indentate(level) + "<" + key + "?" + this.tagEndChar;
              else val += this.indentate(level) + "<" + key + "/" + this.tagEndChar;
            } else if (typeof item === "object") {
              if (this.options.oneListGroup) {
                const result = this.j2x(item, level + 1, ajPath.concat(key));
                listTagVal += result.val;
                if (this.options.attributesGroupName && item.hasOwnProperty(this.options.attributesGroupName)) {
                  listTagAttr += result.attrStr;
                }
              } else {
                listTagVal += this.processTextOrObjNode(item, key, level, ajPath);
              }
            } else {
              if (this.options.oneListGroup) {
                let textValue = this.options.tagValueProcessor(key, item);
                textValue = this.replaceEntitiesValue(textValue);
                listTagVal += textValue;
              } else {
                listTagVal += this.buildTextValNode(item, key, "", level);
              }
            }
          }
          if (this.options.oneListGroup) {
            listTagVal = this.buildObjectNode(listTagVal, key, listTagAttr, level);
          }
          val += listTagVal;
        } else {
          if (this.options.attributesGroupName && key === this.options.attributesGroupName) {
            const Ks = Object.keys(jObj[key]);
            const L = Ks.length;
            for (let j = 0; j < L; j++) {
              attrStr += this.buildAttrPairStr(Ks[j], "" + jObj[key][Ks[j]]);
            }
          } else {
            val += this.processTextOrObjNode(jObj[key], key, level, ajPath);
          }
        }
      }
      return { attrStr, val };
    };
    Builder.prototype.buildAttrPairStr = function(attrName, val) {
      val = this.options.attributeValueProcessor(attrName, "" + val);
      val = this.replaceEntitiesValue(val);
      if (this.options.suppressBooleanAttributes && val === "true") {
        return " " + attrName;
      } else return " " + attrName + '="' + val + '"';
    };
    function processTextOrObjNode(object, key, level, ajPath) {
      const result = this.j2x(object, level + 1, ajPath.concat(key));
      if (object[this.options.textNodeName] !== void 0 && Object.keys(object).length === 1) {
        return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);
      } else {
        return this.buildObjectNode(result.val, key, result.attrStr, level);
      }
    }
    Builder.prototype.buildObjectNode = function(val, key, attrStr, level) {
      if (val === "") {
        if (key[0] === "?") return this.indentate(level) + "<" + key + attrStr + "?" + this.tagEndChar;
        else {
          return this.indentate(level) + "<" + key + attrStr + this.closeTag(key) + this.tagEndChar;
        }
      } else {
        let tagEndExp = "</" + key + this.tagEndChar;
        let piClosingChar = "";
        if (key[0] === "?") {
          piClosingChar = "?";
          tagEndExp = "";
        }
        if ((attrStr || attrStr === "") && val.indexOf("<") === -1) {
          return this.indentate(level) + "<" + key + attrStr + piClosingChar + ">" + val + tagEndExp;
        } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {
          return this.indentate(level) + `<!--${val}-->` + this.newLine;
        } else {
          return this.indentate(level) + "<" + key + attrStr + piClosingChar + this.tagEndChar + val + this.indentate(level) + tagEndExp;
        }
      }
    };
    Builder.prototype.closeTag = function(key) {
      let closeTag = "";
      if (this.options.unpairedTags.indexOf(key) !== -1) {
        if (!this.options.suppressUnpairedNode) closeTag = "/";
      } else if (this.options.suppressEmptyNode) {
        closeTag = "/";
      } else {
        closeTag = `></${key}`;
      }
      return closeTag;
    };
    Builder.prototype.buildTextValNode = function(val, key, attrStr, level) {
      if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {
        return this.indentate(level) + `<![CDATA[${val}]]>` + this.newLine;
      } else if (this.options.commentPropName !== false && key === this.options.commentPropName) {
        return this.indentate(level) + `<!--${val}-->` + this.newLine;
      } else if (key[0] === "?") {
        return this.indentate(level) + "<" + key + attrStr + "?" + this.tagEndChar;
      } else {
        let textValue = this.options.tagValueProcessor(key, val);
        textValue = this.replaceEntitiesValue(textValue);
        if (textValue === "") {
          return this.indentate(level) + "<" + key + attrStr + this.closeTag(key) + this.tagEndChar;
        } else {
          return this.indentate(level) + "<" + key + attrStr + ">" + textValue + "</" + key + this.tagEndChar;
        }
      }
    };
    Builder.prototype.replaceEntitiesValue = function(textValue) {
      if (textValue && textValue.length > 0 && this.options.processEntities) {
        for (let i = 0; i < this.options.entities.length; i++) {
          const entity = this.options.entities[i];
          textValue = textValue.replace(entity.regex, entity.val);
        }
      }
      return textValue;
    };
    function indentate(level) {
      return this.options.indentBy.repeat(level);
    }
    function isAttribute(name) {
      if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {
        return name.substr(this.attrPrefixLen);
      } else {
        return false;
      }
    }
    module2.exports = Builder;
  }
});

// node_modules/fast-xml-parser/src/fxp.js
var require_fxp = __commonJS({
  "node_modules/fast-xml-parser/src/fxp.js"(exports2, module2) {
    "use strict";
    var validator = require_validator();
    var XMLParser = require_XMLParser();
    var XMLBuilder = require_json2xml();
    module2.exports = {
      XMLParser,
      XMLValidator: validator,
      XMLBuilder
    };
  }
});

// data/IsyFact.drawiolib.xml
var require_IsyFact_drawiolib = __commonJS({
  "data/IsyFact.drawiolib.xml"(exports2, module2) {
    module2.exports = '<mxlibrary>[\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"\xABGesch\xE4ftsanwendung\xBB&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;Gesch\xE4ftsanwendung&amp;lt;/b&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"180\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 180,\n    "h": 90,\n    "aspect": "fixed",\n    "title": "Gesch\xE4ftsanwendung"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"\xABQuerschnittsanwendung\xBB&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;Querschnittsanwendung&amp;lt;/b&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#CCCC00;fillColor=#FFFF99;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"180\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 180,\n    "h": 90,\n    "aspect": "fixed",\n    "title": "Querschnittsanwendung"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"\xABService Gateway\xBB&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;Service Gateway&amp;lt;/b&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#CC0066;fillColor=#FF99CC;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"180\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 180,\n    "h": 90,\n    "aspect": "fixed",\n    "title": "Service Gateway"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"\xABPortal\xBB&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;Portal&amp;lt;/b&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#009900;fillColor=#CCFFCC;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"180\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 180,\n    "h": 90,\n    "aspect": "fixed",\n    "title": "Portal"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"\xABRegister\xBB&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;Register&amp;lt;/b&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#CD5038;fillColor=#FFCC99;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"180\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 180,\n    "h": 90,\n    "aspect": "fixed",\n    "title": "Register"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=none;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"470\\" height=\\"460\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 470,\n    "h": 460,\n    "aspect": "fixed",\n    "title": "Gesch\xE4ftsanwendungen-Gruppe"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fillColor=#FFFFD6;strokeColor=none;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"380\\" height=\\"460\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 380,\n    "h": 460,\n    "aspect": "fixed",\n    "title": "Querschnittsanwendungen-Gruppe"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"\\" style=\\"group\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"120\\" height=\\"69\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"\\" style=\\"verticalLabelPosition=bottom;verticalAlign=top;html=1;shadow=0;dashed=0;strokeWidth=1;shape=mxgraph.android.phone2;strokeColor=#666666;fillColor=#f5f5f5;fontSize=14;align=center;fontColor=#333333;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"25\\" y=\\"5\\" width=\\"20\\" height=\\"40\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"4\\" value=\\"\\" style=\\"pointerEvents=1;shadow=0;dashed=0;html=1;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;outlineConnect=0;align=center;shape=mxgraph.office.devices.laptop;fontSize=14;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"41.5\\" y=\\"15\\" width=\\"50\\" height=\\"30\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"5\\" value=\\"Web-Client\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=14;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry y=\\"49\\" width=\\"120\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"6\\" value=\\"\\" style=\\"verticalLabelPosition=bottom;html=1;verticalAlign=top;align=center;strokeColor=#314354;fillColor=#647687;shape=mxgraph.azure.user;fontSize=14;fontColor=#ffffff;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"71.5\\" width=\\"25\\" height=\\"25\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 120,\n    "h": 69,\n    "aspect": "fixed",\n    "title": "Web-Client"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"\\" style=\\"group\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"120\\" height=\\"70\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"Datastore\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=14;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry y=\\"50\\" width=\\"120\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"4\\" value=\\"\\" style=\\"shape=datastore;whiteSpace=wrap;html=1;strokeColor=#808080;fillColor=#C9C9C9;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"35\\" width=\\"50\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 120,\n    "h": 70,\n    "aspect": "fixed",\n    "title": "Datastore"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"\\" style=\\"group\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"120\\" height=\\"70\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"\\" style=\\"fontColor=#0066CC;verticalAlign=top;verticalLabelPosition=bottom;labelPosition=center;align=center;html=1;outlineConnect=0;fillColor=#BEC5C9;strokeColor=#576164;gradientColor=none;gradientDirection=north;strokeWidth=2;shape=mxgraph.networks.rack;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"45\\" width=\\"30\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"4\\" value=\\"Anwendung\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=14;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry y=\\"50\\" width=\\"120\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 120,\n    "h": 70,\n    "aspect": "fixed",\n    "title": "Anwendung"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"Interne Anwender\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fontSize=14;align=center;verticalAlign=top;strokeColor=#576164;fillColor=default;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"70\\" width=\\"425\\" height=\\"130\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"&amp;lt;b&amp;gt;&amp;amp;nbsp;Anwendungslandschaft&amp;lt;/b&amp;gt;\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fontSize=14;align=left;verticalAlign=top;strokeColor=#576164;fillColor=default;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"70\\" y=\\"180\\" width=\\"970\\" height=\\"880\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"4\\" value=\\"\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fillColor=#FFFFD6;strokeColor=none;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"650\\" y=\\"310\\" width=\\"380\\" height=\\"700\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"5\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontSize=14;fontColor=#798183;endArrow=blockThin;endSize=6;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"6\\" target=\\"53\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;Array as=\\"points\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"6\\" value=\\"\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=none;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"80\\" y=\\"310\\" width=\\"470\\" height=\\"460\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"7\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.25;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0.25;entryDx=0;entryDy=0;fontSize=14;fontColor=#798183;endArrow=blockThin;endSize=6;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"9\\" target=\\"6\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;Array as=\\"points\\"&gt;&lt;mxPoint x=\\"848\\" y=\\"280\\"/&gt;&lt;mxPoint x=\\"590\\" y=\\"280\\"/&gt;&lt;mxPoint x=\\"590\\" y=\\"425\\"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"8\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.75;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0.25;entryDx=0;entryDy=0;fontSize=14;endArrow=blockThin;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"9\\" target=\\"52\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;Array as=\\"points\\"&gt;&lt;mxPoint x=\\"963\\" y=\\"300\\"/&gt;&lt;mxPoint x=\\"620\\" y=\\"300\\"/&gt;&lt;mxPoint x=\\"620\\" y=\\"860\\"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"9\\" value=\\"Service-Gateway\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ff99cc;strokeColor=#CC0066;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"790\\" y=\\"220\\" width=\\"230\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"10\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FF99CC;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"9\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"11\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;endArrow=blockThin;strokeColor=#576164;strokeWidth=2;exitX=0;exitY=0.5;exitDx=0;exitDy=0;\\" edge=\\"1\\" source=\\"12\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"90\\" y=\\"310\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"12\\" value=\\"Portal\\" style=\\"html=1;fontSize=14;align=center;fillColor=#CCFFCC;strokeColor=#67AB9F;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"101\\" y=\\"220\\" width=\\"670\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"13\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"12\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"14\\" value=\\"&amp;lt;font style=&amp;quot;font-size: 14px&amp;quot;&amp;gt;Gesch\xE4fts-&amp;lt;br&amp;gt;anwendung&amp;lt;/font&amp;gt;\\" style=\\"html=1;fontSize=14;align=center;fillColor=#99ccff;strokeColor=#7197BD;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"110\\" y=\\"330\\" width=\\"120\\" height=\\"420\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"15\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#99CCFF;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"14\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"16\\" style=\\"edgeStyle=none;html=1;endArrow=blockThin;strokeColor=#576164;strokeWidth=2;rounded=0;\\" edge=\\"1\\" source=\\"17\\" target=\\"19\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"17\\" value=\\"Gesch\xE4fts-&amp;lt;br&amp;gt;anwendung&amp;lt;br&amp;gt;(Interaktion)\\" style=\\"html=1;fontSize=14;align=center;fillColor=#99ccff;strokeColor=#7197BD;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"240\\" y=\\"330\\" width=\\"120\\" height=\\"160\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"18\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#99CCFF;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"17\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"19\\" value=\\"Gesch\xE4fts-&amp;lt;br&amp;gt;anwendung&amp;lt;br&amp;gt;(Batch/Task)\\" style=\\"html=1;fontSize=14;align=center;fillColor=#99ccff;strokeColor=#7197BD;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"240\\" y=\\"590\\" width=\\"120\\" height=\\"160\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"20\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#99CCFF;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"19\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"21\\" value=\\"Querschnittsanwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"680\\" y=\\"330\\" width=\\"340\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"22\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"21\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"23\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"680\\" y=\\"440\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"24\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"23\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"25\\" value=\\"Externe Anwender\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fontSize=14;align=center;verticalAlign=top;strokeColor=#576164;fillColor=default;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"509\\" width=\\"531\\" height=\\"130\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"26\\" value=\\"\\" style=\\"group;strokeColor=none;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"600\\" y=\\"41\\" width=\\"120\\" height=\\"69\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"27\\" value=\\"\\" style=\\"verticalLabelPosition=bottom;verticalAlign=top;html=1;shadow=0;dashed=0;strokeWidth=1;shape=mxgraph.android.phone2;strokeColor=#666666;fillColor=#f5f5f5;fontSize=14;align=center;fontColor=#333333;\\" vertex=\\"1\\" parent=\\"26\\"&gt;&lt;mxGeometry x=\\"25\\" y=\\"5\\" width=\\"20\\" height=\\"40\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"28\\" value=\\"\\" style=\\"pointerEvents=1;shadow=0;dashed=0;html=1;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;outlineConnect=0;align=center;shape=mxgraph.office.devices.laptop;fontSize=14;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;\\" vertex=\\"1\\" parent=\\"26\\"&gt;&lt;mxGeometry x=\\"41.5\\" y=\\"15\\" width=\\"50\\" height=\\"30\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"29\\" value=\\"Web-Client\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=14;\\" vertex=\\"1\\" parent=\\"26\\"&gt;&lt;mxGeometry y=\\"49\\" width=\\"120\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"30\\" value=\\"\\" style=\\"verticalLabelPosition=bottom;html=1;verticalAlign=top;align=center;strokeColor=#314354;fillColor=#647687;shape=mxgraph.azure.user;fontSize=14;fontColor=#ffffff;\\" vertex=\\"1\\" parent=\\"26\\"&gt;&lt;mxGeometry x=\\"71.5\\" width=\\"25\\" height=\\"25\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"31\\" value=\\"\\" style=\\"group;strokeColor=none;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"211\\" y=\\"40\\" width=\\"120\\" height=\\"69\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"32\\" value=\\"\\" style=\\"verticalLabelPosition=bottom;verticalAlign=top;html=1;shadow=0;dashed=0;strokeWidth=1;shape=mxgraph.android.phone2;strokeColor=#666666;fillColor=#f5f5f5;fontSize=14;align=center;fontColor=#333333;\\" vertex=\\"1\\" parent=\\"31\\"&gt;&lt;mxGeometry x=\\"25\\" y=\\"5\\" width=\\"20\\" height=\\"40\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"33\\" value=\\"\\" style=\\"pointerEvents=1;shadow=0;dashed=0;html=1;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;outlineConnect=0;align=center;shape=mxgraph.office.devices.laptop;fontSize=14;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;\\" vertex=\\"1\\" parent=\\"31\\"&gt;&lt;mxGeometry x=\\"41.5\\" y=\\"15\\" width=\\"50\\" height=\\"30\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"34\\" value=\\"Web-Client\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=14;\\" vertex=\\"1\\" parent=\\"31\\"&gt;&lt;mxGeometry y=\\"49\\" width=\\"120\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"35\\" value=\\"\\" style=\\"verticalLabelPosition=bottom;html=1;verticalAlign=top;align=center;strokeColor=#314354;fillColor=#647687;shape=mxgraph.azure.user;fontSize=14;fontColor=#ffffff;\\" vertex=\\"1\\" parent=\\"31\\"&gt;&lt;mxGeometry x=\\"71.5\\" width=\\"25\\" height=\\"25\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"36\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;strokeColor=#576164;strokeWidth=2;fontSize=14;entryX=0.5;entryY=0;entryDx=0;entryDy=0;endArrow=blockThin;endFill=1;\\" edge=\\"1\\" source=\\"73\\" target=\\"9\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"37\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;strokeColor=#576164;strokeWidth=2;fontSize=14;entryX=0.5;entryY=0;entryDx=0;entryDy=0;endArrow=blockThin;endFill=1;\\" edge=\\"1\\" source=\\"29\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"660\\" y=\\"130\\" as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"659.9999999999995\\" y=\\"220\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"38\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;strokeColor=#576164;strokeWidth=2;fontSize=14;entryX=0.5;entryY=0;entryDx=0;entryDy=0;endArrow=blockThin;endFill=1;\\" edge=\\"1\\" source=\\"34\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"440\\" y=\\"130\\" as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"440.00000000000045\\" y=\\"220\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"39\\" value=\\"Gesch\xE4fts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#99ccff;strokeColor=#7197BD;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"400\\" y=\\"330\\" width=\\"120\\" height=\\"420\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"40\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#99CCFF;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"39\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"41\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"855\\" y=\\"440\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"42\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"41\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"43\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"680\\" y=\\"550\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"44\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"43\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"45\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"855\\" y=\\"550\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"46\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"45\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"47\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"680\\" y=\\"660\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"48\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"47\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"49\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"855\\" y=\\"660\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"50\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"49\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"51\\" style=\\"edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=-0.005;entryY=0.856;entryDx=0;entryDy=0;entryPerimeter=0;fontSize=14;endArrow=blockThin;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"52\\" target=\\"4\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"52\\" value=\\"\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fontSize=14;fillColor=#FFEBD6;strokeColor=none;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"80\\" y=\\"810\\" width=\\"470\\" height=\\"200\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"53\\" value=\\"&amp;lt;span style=&amp;quot;&amp;quot;&amp;gt;Querschnittsanwendungen&amp;lt;/span&amp;gt;\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=14;fontStyle=0;fontColor=#798183;horizontal=1;rotation=-90;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"573\\" y=\\"530\\" width=\\"180\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"54\\" value=\\"&amp;lt;b&amp;gt;Dom\xE4ne&amp;lt;/b&amp;gt;\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fontSize=14;align=center;dashed=1;strokeWidth=2;verticalAlign=top;fillColor=none;strokeColor=#576164;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"101\\" y=\\"280\\" width=\\"269\\" height=\\"750\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"55\\" value=\\"&amp;lt;span style=&amp;quot;&amp;quot;&amp;gt;Gesch\xE4ftsanwendungen&amp;lt;/span&amp;gt;\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=14;fontStyle=0;fontColor=#798183;horizontal=1;rotation=-90;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry y=\\"536\\" width=\\"180\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"56\\" value=\\"&amp;lt;span&amp;gt;Register&amp;lt;/span&amp;gt;\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=14;fontStyle=0;fontColor=#798183;horizontal=1;rotation=-90;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry y=\\"900\\" width=\\"180\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"57\\" value=\\"&amp;lt;b&amp;gt;Dom\xE4ne&amp;lt;/b&amp;gt;\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fontSize=14;align=center;dashed=1;strokeWidth=2;verticalAlign=top;fillColor=none;strokeColor=#576164;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"390\\" y=\\"280\\" width=\\"140\\" height=\\"750\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"58\\" value=\\"&amp;lt;font style=&amp;quot;font-size: 14px&amp;quot;&amp;gt;Register&amp;lt;/font&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#CD5038;fillColor=#FFCC99;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"400\\" y=\\"830\\" width=\\"120\\" height=\\"160\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"59\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"58\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"60\\" value=\\"&amp;lt;font style=&amp;quot;font-size: 14px&amp;quot;&amp;gt;Register&amp;lt;/font&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#CD5038;fillColor=#FFCC99;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"110\\" y=\\"830\\" width=\\"120\\" height=\\"160\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"61\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"60\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"62\\" style=\\"rounded=0;html=1;endArrow=blockThin;strokeColor=#576164;strokeWidth=2;entryX=0.021;entryY=0.716;entryDx=0;entryDy=0;entryPerimeter=0;\\" edge=\\"1\\" target=\\"3\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"100\\" y=\\"320\\" as=\\"targetPoint\\"/&gt;&lt;mxPoint x=\\"90\\" y=\\"770\\" as=\\"sourcePoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"63\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"680\\" y=\\"770\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"64\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"63\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"65\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"855\\" y=\\"770\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"66\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"65\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"67\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"680\\" y=\\"880\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"68\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"67\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"69\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"855\\" y=\\"880\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"70\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"69\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"71\\" value=\\"\\" style=\\"group\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"845\\" y=\\"40\\" width=\\"120\\" height=\\"70\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"72\\" value=\\"\\" style=\\"fontColor=#0066CC;verticalAlign=top;verticalLabelPosition=bottom;labelPosition=center;align=center;html=1;outlineConnect=0;fillColor=#BEC5C9;strokeColor=#576164;gradientColor=none;gradientDirection=north;strokeWidth=2;shape=mxgraph.networks.rack;\\" vertex=\\"1\\" parent=\\"71\\"&gt;&lt;mxGeometry x=\\"45\\" width=\\"30\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"73\\" value=\\"Anwendung\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=14;\\" vertex=\\"1\\" parent=\\"71\\"&gt;&lt;mxGeometry y=\\"50\\" width=\\"120\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 1040,\n    "h": 1060,\n    "aspect": "fixed",\n    "title": "A-Architektur AWL Register"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"Interne Anwender\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fontSize=14;align=center;verticalAlign=top;strokeColor=#576164;fillColor=default;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"70\\" width=\\"425\\" height=\\"130\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"&amp;lt;b&amp;gt;&amp;amp;nbsp;Anwendungslandschaft&amp;lt;/b&amp;gt;\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fontSize=14;align=left;verticalAlign=top;strokeColor=#576164;fillColor=default;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"70\\" y=\\"180\\" width=\\"970\\" height=\\"630\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"4\\" value=\\"\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fillColor=#FFFFD6;strokeColor=none;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"650\\" y=\\"310\\" width=\\"380\\" height=\\"460\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"5\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=-0.006;entryY=0.345;entryDx=0;entryDy=0;entryPerimeter=0;fontSize=14;fontColor=#798183;endArrow=blockThin;endSize=6;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"6\\" target=\\"4\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;Array as=\\"points\\"&gt;&lt;mxPoint x=\\"610\\" y=\\"540\\"/&gt;&lt;mxPoint x=\\"610\\" y=\\"469\\"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"6\\" value=\\"\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=none;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"80\\" y=\\"310\\" width=\\"470\\" height=\\"460\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"7\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0.25;entryDx=0;entryDy=0;fontSize=14;fontColor=#798183;endArrow=blockThin;endSize=6;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"8\\" target=\\"6\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;Array as=\\"points\\"&gt;&lt;mxPoint x=\\"905\\" y=\\"290\\"/&gt;&lt;mxPoint x=\\"590\\" y=\\"290\\"/&gt;&lt;mxPoint x=\\"590\\" y=\\"425\\"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"8\\" value=\\"Service-Gateway\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ff99cc;strokeColor=#CC0066;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"790\\" y=\\"220\\" width=\\"230\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"9\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FF99CC;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"8\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"10\\" value=\\"&amp;lt;b&amp;gt;Dom\xE4ne&amp;lt;/b&amp;gt;\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fontSize=14;align=center;dashed=1;strokeWidth=2;verticalAlign=top;fillColor=none;strokeColor=#576164;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"101\\" y=\\"280\\" width=\\"269\\" height=\\"510\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"11\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;endArrow=blockThin;strokeColor=#576164;strokeWidth=2;exitX=0;exitY=0.5;exitDx=0;exitDy=0;\\" edge=\\"1\\" source=\\"12\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"90\\" y=\\"310\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"12\\" value=\\"Portal\\" style=\\"html=1;fontSize=14;align=center;fillColor=#CCFFCC;strokeColor=#67AB9F;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"101\\" y=\\"220\\" width=\\"670\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"13\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"12\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"14\\" value=\\"Gesch\xE4fts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#99ccff;strokeColor=#7197BD;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"110\\" y=\\"330\\" width=\\"120\\" height=\\"420\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"15\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#99CCFF;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"14\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"16\\" style=\\"edgeStyle=none;html=1;endArrow=blockThin;strokeColor=#576164;strokeWidth=2;rounded=0;\\" edge=\\"1\\" source=\\"17\\" target=\\"19\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"17\\" value=\\"Gesch\xE4fts-&amp;lt;br&amp;gt;anwendung&amp;lt;br&amp;gt;(Interaktion)\\" style=\\"html=1;fontSize=14;align=center;fillColor=#99ccff;strokeColor=#7197BD;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"240\\" y=\\"330\\" width=\\"120\\" height=\\"160\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"18\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#99CCFF;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"17\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"19\\" value=\\"Gesch\xE4fts-&amp;lt;br&amp;gt;anwendung&amp;lt;br&amp;gt;(Batch/Task)\\" style=\\"html=1;fontSize=14;align=center;fillColor=#99ccff;strokeColor=#7197BD;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"240\\" y=\\"590\\" width=\\"120\\" height=\\"160\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"20\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#99CCFF;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"19\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"21\\" value=\\"Querschnittsanwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"680\\" y=\\"330\\" width=\\"340\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"22\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"21\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"23\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"680\\" y=\\"440\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"24\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"23\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"25\\" value=\\"Externe Anwender\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fontSize=14;align=center;verticalAlign=top;strokeColor=#576164;fillColor=default;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"509\\" width=\\"531\\" height=\\"130\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"26\\" value=\\"\\" style=\\"group;strokeColor=none;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"600\\" y=\\"41\\" width=\\"120\\" height=\\"69\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"27\\" value=\\"\\" style=\\"verticalLabelPosition=bottom;verticalAlign=top;html=1;shadow=0;dashed=0;strokeWidth=1;shape=mxgraph.android.phone2;strokeColor=#666666;fillColor=#f5f5f5;fontSize=14;align=center;fontColor=#333333;\\" vertex=\\"1\\" parent=\\"26\\"&gt;&lt;mxGeometry x=\\"25\\" y=\\"5\\" width=\\"20\\" height=\\"40\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"28\\" value=\\"\\" style=\\"pointerEvents=1;shadow=0;dashed=0;html=1;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;outlineConnect=0;align=center;shape=mxgraph.office.devices.laptop;fontSize=14;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;\\" vertex=\\"1\\" parent=\\"26\\"&gt;&lt;mxGeometry x=\\"41.5\\" y=\\"15\\" width=\\"50\\" height=\\"30\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"29\\" value=\\"Web-Client\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=14;\\" vertex=\\"1\\" parent=\\"26\\"&gt;&lt;mxGeometry y=\\"49\\" width=\\"120\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"30\\" value=\\"\\" style=\\"verticalLabelPosition=bottom;html=1;verticalAlign=top;align=center;strokeColor=#314354;fillColor=#647687;shape=mxgraph.azure.user;fontSize=14;fontColor=#ffffff;\\" vertex=\\"1\\" parent=\\"26\\"&gt;&lt;mxGeometry x=\\"71.5\\" width=\\"25\\" height=\\"25\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"31\\" value=\\"\\" style=\\"group;strokeColor=none;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"211\\" y=\\"40\\" width=\\"120\\" height=\\"69\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"32\\" value=\\"\\" style=\\"verticalLabelPosition=bottom;verticalAlign=top;html=1;shadow=0;dashed=0;strokeWidth=1;shape=mxgraph.android.phone2;strokeColor=#666666;fillColor=#f5f5f5;fontSize=14;align=center;fontColor=#333333;\\" vertex=\\"1\\" parent=\\"31\\"&gt;&lt;mxGeometry x=\\"25\\" y=\\"5\\" width=\\"20\\" height=\\"40\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"33\\" value=\\"\\" style=\\"pointerEvents=1;shadow=0;dashed=0;html=1;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;outlineConnect=0;align=center;shape=mxgraph.office.devices.laptop;fontSize=14;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;\\" vertex=\\"1\\" parent=\\"31\\"&gt;&lt;mxGeometry x=\\"41.5\\" y=\\"15\\" width=\\"50\\" height=\\"30\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"34\\" value=\\"Web-Client\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=14;\\" vertex=\\"1\\" parent=\\"31\\"&gt;&lt;mxGeometry y=\\"49\\" width=\\"120\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"35\\" value=\\"\\" style=\\"verticalLabelPosition=bottom;html=1;verticalAlign=top;align=center;strokeColor=#314354;fillColor=#647687;shape=mxgraph.azure.user;fontSize=14;fontColor=#ffffff;\\" vertex=\\"1\\" parent=\\"31\\"&gt;&lt;mxGeometry x=\\"71.5\\" width=\\"25\\" height=\\"25\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"36\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;strokeColor=#576164;strokeWidth=2;fontSize=14;entryX=0.5;entryY=0;entryDx=0;entryDy=0;endArrow=blockThin;endFill=1;\\" edge=\\"1\\" target=\\"8\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"905\\" y=\\"110\\" as=\\"sourcePoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"37\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;strokeColor=#576164;strokeWidth=2;fontSize=14;entryX=0.5;entryY=0;entryDx=0;entryDy=0;endArrow=blockThin;endFill=1;\\" edge=\\"1\\" source=\\"29\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"660\\" y=\\"130\\" as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"659.9999999999995\\" y=\\"220\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"38\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;strokeColor=#576164;strokeWidth=2;fontSize=14;entryX=0.5;entryY=0;entryDx=0;entryDy=0;endArrow=blockThin;endFill=1;\\" edge=\\"1\\" source=\\"34\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"440\\" y=\\"130\\" as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"440.00000000000045\\" y=\\"220\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"39\\" value=\\"&amp;lt;b&amp;gt;Dom\xE4ne&amp;lt;/b&amp;gt;\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fontSize=14;align=center;dashed=1;strokeWidth=2;verticalAlign=top;fillColor=none;strokeColor=#576164;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"390\\" y=\\"280\\" width=\\"140\\" height=\\"510\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"40\\" value=\\"Gesch\xE4fts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#99ccff;strokeColor=#7197BD;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"400\\" y=\\"330\\" width=\\"120\\" height=\\"420\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"41\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#99CCFF;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"40\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"42\\" value=\\"&amp;lt;span style=&amp;quot;&amp;quot;&amp;gt;Gesch\xE4ftsanwendungen&amp;lt;/span&amp;gt;\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=14;fontStyle=0;fontColor=#798183;horizontal=1;rotation=-90;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry y=\\"530\\" width=\\"180\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"43\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"855\\" y=\\"440\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"44\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"43\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"45\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"680\\" y=\\"550\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"46\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"45\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"47\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"855\\" y=\\"550\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"48\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"47\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"49\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"680\\" y=\\"660\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"50\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"49\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"51\\" value=\\"Querschnitts-&amp;lt;br&amp;gt;anwendung\\" style=\\"html=1;fontSize=14;align=center;fillColor=#ffff99;strokeColor=#CCCC00;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"855\\" y=\\"660\\" width=\\"160\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"52\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=#FFFF99;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"51\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"53\\" value=\\"&amp;lt;span style=&amp;quot;&amp;quot;&amp;gt;Querschnittsanwendungen&amp;lt;/span&amp;gt;\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=14;fontStyle=0;fontColor=#798183;horizontal=1;rotation=-90;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"573\\" y=\\"530\\" width=\\"180\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"54\\" value=\\"\\" style=\\"group;strokeColor=none;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"845\\" y=\\"39\\" width=\\"120\\" height=\\"70\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"55\\" value=\\"\\" style=\\"fontColor=#0066CC;verticalAlign=top;verticalLabelPosition=bottom;labelPosition=center;align=center;html=1;outlineConnect=0;fillColor=#BEC5C9;strokeColor=#576164;gradientColor=none;gradientDirection=north;strokeWidth=2;shape=mxgraph.networks.rack;\\" vertex=\\"1\\" parent=\\"54\\"&gt;&lt;mxGeometry x=\\"45\\" width=\\"30\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"56\\" value=\\"Anwendung\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=14;\\" vertex=\\"1\\" parent=\\"54\\"&gt;&lt;mxGeometry y=\\"50\\" width=\\"120\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 1040,\n    "h": 810,\n    "aspect": "fixed",\n    "title": "A-Architektur"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;font color=&amp;quot;#ffffff&amp;quot; size=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;b style=&amp;quot;font-size: 20px;&amp;quot;&amp;gt;Datenzugriff&amp;lt;/b&amp;gt;&amp;lt;/font&amp;gt;\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=default;align=right;horizontal=0;verticalAlign=top;spacingRight=10;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"640\\" width=\\"540\\" height=\\"200\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"&amp;lt;font color=&amp;quot;#ffffff&amp;quot; size=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;b style=&amp;quot;font-size: 20px;&amp;quot;&amp;gt;Anwendungskern&amp;lt;/b&amp;gt;&amp;lt;/font&amp;gt;\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=default;align=right;horizontal=0;verticalAlign=top;spacingRight=10;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"320\\" width=\\"540\\" height=\\"300\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"4\\" value=\\"Persistenz-&amp;lt;div&amp;gt;Framework&amp;lt;/div&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"390\\" y=\\"660\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"5\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"4\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"6\\" value=\\"&amp;lt;b&amp;gt;Anwendungslogik&amp;lt;/b&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;align=left;verticalAlign=top;spacingLeft=5;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"75\\" y=\\"430\\" width=\\"475\\" height=\\"170\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"7\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"6\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"8\\" value=\\"\\" style=\\"group\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"100\\" y=\\"474\\" width=\\"190\\" height=\\"110\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"9\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"8\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"30\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"10\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"9\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"11\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"8\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"20\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"12\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"11\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"13\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"8\\"&gt;&lt;mxGeometry x=\\"10\\" y=\\"10\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"14\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"13\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"15\\" value=\\"Fachkomponente\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"8\\"&gt;&lt;mxGeometry width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"16\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"15\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"17\\" value=\\"\\" style=\\"group\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"330\\" y=\\"474\\" width=\\"190\\" height=\\"110\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"18\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"17\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"30\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"19\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"18\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"20\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"17\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"20\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"21\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"20\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"22\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"17\\"&gt;&lt;mxGeometry x=\\"10\\" y=\\"10\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"23\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"22\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"24\\" value=\\"Externer Service\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"17\\"&gt;&lt;mxGeometry width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"25\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"24\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"26\\" value=\\"Anwendungskern-&amp;lt;div&amp;gt;Framework&amp;lt;/div&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"390\\" y=\\"340\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"27\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"26\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"28\\" value=\\"&amp;lt;b&amp;gt;Persistenzlogik&amp;lt;/b&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;align=left;verticalAlign=top;spacingLeft=5;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"75\\" y=\\"660\\" width=\\"295\\" height=\\"160\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"29\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"28\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"30\\" value=\\"\\" style=\\"group\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"127.5\\" y=\\"690\\" width=\\"190\\" height=\\"110\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"31\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"30\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"30\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"32\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"31\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"33\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"30\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"20\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"34\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"33\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"35\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"30\\"&gt;&lt;mxGeometry x=\\"10\\" y=\\"10\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"36\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"35\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"37\\" value=\\"Fachkomponente\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"30\\"&gt;&lt;mxGeometry width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"38\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"37\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"39\\" value=\\"&amp;lt;font color=&amp;quot;#ffffff&amp;quot; size=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;b style=&amp;quot;font-size: 20px;&amp;quot;&amp;gt;Service&amp;lt;/b&amp;gt;&amp;lt;/font&amp;gt;\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=default;align=right;horizontal=0;verticalAlign=top;spacingRight=10;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"30\\" width=\\"260\\" height=\\"300\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"40\\" value=\\"&amp;lt;b&amp;gt;Servicelogik&amp;lt;/b&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;align=left;verticalAlign=top;spacingLeft=5;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"50\\" y=\\"110\\" width=\\"220\\" height=\\"170\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"41\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"40\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"42\\" value=\\"\\" style=\\"group\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"67.5\\" y=\\"154\\" width=\\"190\\" height=\\"110\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"43\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"42\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"30\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"44\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"43\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"45\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"42\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"20\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"46\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"45\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"47\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"42\\"&gt;&lt;mxGeometry x=\\"10\\" y=\\"10\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"48\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"47\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"49\\" value=\\"Fachkomponente\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"42\\"&gt;&lt;mxGeometry width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"50\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"49\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"51\\" value=\\"Service-Framework\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"110\\" y=\\"20\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"52\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"51\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"53\\" value=\\"&amp;lt;font color=&amp;quot;#ffffff&amp;quot; size=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;b style=&amp;quot;font-size: 20px;&amp;quot;&amp;gt;Batch&amp;lt;/b&amp;gt;&amp;lt;/font&amp;gt;\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=default;align=right;horizontal=0;verticalAlign=top;spacingRight=10;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"310\\" width=\\"260\\" height=\\"300\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"54\\" value=\\"&amp;lt;b&amp;gt;Batchlogik&amp;lt;/b&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;align=left;verticalAlign=top;spacingLeft=5;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"330\\" y=\\"110\\" width=\\"220\\" height=\\"170\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"55\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"54\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"56\\" value=\\"\\" style=\\"group\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"347.5\\" y=\\"154\\" width=\\"190\\" height=\\"110\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"57\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"56\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"30\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"58\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"57\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"59\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"56\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"20\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"60\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"59\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"61\\" value=\\"\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"56\\"&gt;&lt;mxGeometry x=\\"10\\" y=\\"10\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"62\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"61\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"63\\" value=\\"Fachkomponente\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"56\\"&gt;&lt;mxGeometry width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"64\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"63\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"65\\" value=\\"Batchrahmen\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"390\\" y=\\"20\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"66\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"65\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"67\\" value=\\"Persistenz\\" style=\\"shape=curlyBracket;whiteSpace=wrap;html=1;rounded=1;labelPosition=left;verticalLabelPosition=middle;align=center;verticalAlign=middle;horizontal=0;fontSize=20;fontStyle=1\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry y=\\"640\\" width=\\"20\\" height=\\"200\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"68\\" value=\\"Anwendungskern\\" style=\\"shape=curlyBracket;whiteSpace=wrap;html=1;rounded=1;labelPosition=left;verticalLabelPosition=middle;align=center;verticalAlign=middle;horizontal=0;fontSize=20;fontStyle=1\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry y=\\"320\\" width=\\"20\\" height=\\"300\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"69\\" value=\\"Nutzung\\" style=\\"shape=curlyBracket;whiteSpace=wrap;html=1;rounded=1;labelPosition=left;verticalLabelPosition=middle;align=center;verticalAlign=middle;horizontal=0;fontSize=20;fontStyle=1\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"20\\" height=\\"300\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"70\\" value=\\"&amp;lt;font color=&amp;quot;#ffffff&amp;quot; size=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;b style=&amp;quot;font-size: 20px;&amp;quot;&amp;gt;Querschnitt&amp;lt;/b&amp;gt;&amp;lt;/font&amp;gt;\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=default;align=right;horizontal=0;verticalAlign=top;spacingRight=10;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"590\\" width=\\"200\\" height=\\"840\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"71\\" value=\\"Baustein\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"610\\" y=\\"230\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"72\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"71\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"73\\" value=\\"Baustein\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"610\\" y=\\"330\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"74\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"73\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"75\\" value=\\"Baustein\\" style=\\"html=1;dropTarget=0;strokeColor=#7197BD;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"610\\" y=\\"530\\" width=\\"160\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"76\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;\\" vertex=\\"1\\" parent=\\"75\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"77\\" value=\\"...\\" style=\\"text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;horizontal=0;fontSize=40;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"650\\" y=\\"455\\" width=\\"60\\" height=\\"30\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 790,\n    "h": 840,\n    "aspect": "fixed",\n    "title": "IT-System"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"Informations- und Dienstzone\\" style=\\"rounded=0;whiteSpace=wrap;html=1;dashed=1;strokeWidth=3;fontSize=14;align=left;fontStyle=3;verticalAlign=top;spacingLeft=5;spacingTop=5;fillColor=none;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"4.547473508864641e-13\\" y=\\"280\\" width=\\"1280\\" height=\\"390\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"Logik- und Verarbeitungszone\\" style=\\"rounded=0;whiteSpace=wrap;html=1;dashed=1;strokeWidth=3;fontSize=14;align=left;fontStyle=3;verticalAlign=top;spacingTop=5;spacingLeft=5;fillColor=none;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"4.547473508864641e-13\\" y=\\"690\\" width=\\"1280\\" height=\\"600\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"4\\" value=\\"Datenzone\\" style=\\"rounded=0;whiteSpace=wrap;html=1;dashed=1;strokeWidth=3;fontSize=14;align=left;fontStyle=3;verticalAlign=top;spacingLeft=5;spacingTop=5;fillColor=none;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"4.547473508864641e-13\\" y=\\"1310\\" width=\\"1280\\" height=\\"550\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"5\\" style=\\"rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=#576164;strokeWidth=2;startArrow=none;startFill=0;endArrow=none;endFill=0;entryX=0.006;entryY=0.718;entryDx=0;entryDy=0;entryPerimeter=0;\\" edge=\\"1\\" target=\\"13\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"605.0000000000005\\" y=\\"215.99999999999955\\" as=\\"sourcePoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"6\\" style=\\"rounded=0;html=1;entryX=-0.005;entryY=0.251;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;exitX=0.997;exitY=0.251;exitDx=0;exitDy=0;exitPerimeter=0;\\" edge=\\"1\\" source=\\"7\\" target=\\"13\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"680.0000000000005\\" y=\\"220\\" as=\\"sourcePoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"7\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;Firewall&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#c0c0c0;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"560.0000000000005\\" y=\\"166\\" width=\\"160\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"8\\" style=\\"edgeStyle=orthogonalEdgeStyle;html=1;exitX=0.55;exitY=0.95;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.008;entryY=0.722;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;strokeColor=#576164;strokeWidth=2;rounded=0;endFill=0;\\" edge=\\"1\\" source=\\"9\\" target=\\"7\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"9\\" value=\\"internes LAN\\" style=\\"ellipse;shape=cloud;whiteSpace=wrap;html=1;fontSize=14;strokeWidth=1;align=center;verticalAlign=middle;fillColor=#c0c0c0;fontColor=#000000;strokeColor=#314354;fontStyle=1\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"445.00000000000045\\" width=\\"120\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"10\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.55;exitY=0.95;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.008;entryY=0.252;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"11\\" target=\\"7\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"11\\" value=\\"WAN\\" style=\\"ellipse;shape=cloud;whiteSpace=wrap;html=1;fontSize=14;strokeWidth=1;align=center;verticalAlign=middle;fillColor=#c0c0c0;fontColor=#000000;strokeColor=#314354;fontStyle=1\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"715.0000000000005\\" width=\\"120\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"12\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=#576164;strokeWidth=2;startArrow=none;startFill=0;endArrow=none;endFill=0;\\" edge=\\"1\\" target=\\"75\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"640.0000000000005\\" y=\\"303.00000000000045\\" as=\\"sourcePoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"13\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;LoadBalancer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#c0c0c0;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"560.0000000000005\\" y=\\"256\\" width=\\"160\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"14\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=0;exitDy=75;exitPerimeter=0;entryX=0.999;entryY=0.478;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"16\\" target=\\"75\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"15\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=50;exitDy=85;exitPerimeter=0;entryX=0.002;entryY=0.527;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"16\\" target=\\"18\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"16\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;Firewall&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#c0c0c0;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"560.0000000000005\\" y=\\"650\\" width=\\"160\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"17\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=30;exitDy=160;exitPerimeter=0;entryX=0;entryY=0;entryDx=0;entryDy=115;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"18\\" target=\\"83\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"18\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;LoadBalancer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#c0c0c0;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"560.0000000000005\\" y=\\"745\\" width=\\"160\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"19\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=260;exitDy=125;exitPerimeter=0;entryX=0.368;entryY=0.996;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"83\\" target=\\"25\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;Array as=\\"points\\"&gt;&lt;mxPoint x=\\"145.00000000000045\\" y=\\"1279\\"/&gt;&lt;mxPoint x=\\"561.0000000000005\\" y=\\"1279\\"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"20\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=0;exitDy=115;exitPerimeter=0;entryX=1.053;entryY=0.746;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"87\\" target=\\"18\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"21\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=260;exitDy=125;exitPerimeter=0;entryX=-0.064;entryY=0.706;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"87\\" target=\\"25\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"22\\" value=\\"Access Manager Cluster\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#ffff99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"540.0000000000005\\" y=\\"910\\" width=\\"240\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"23\\" value=\\"Querschnitts-Cluster\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#ffff99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"540.0000000000005\\" y=\\"1000\\" width=\\"240\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"24\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=50;exitDy=85;exitPerimeter=0;entryX=0;entryY=0;entryDx=0;entryDy=200;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"25\\" target=\\"98\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"25\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;Firewall&amp;amp;gt;&amp;amp;gt;\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#c0c0c0;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"560.0000000000005\\" y=\\"1267\\" width=\\"160\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"26\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=0;exitDy=115;exitPerimeter=0;entryX=0;entryY=0;entryDx=50;entryDy=85;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"91\\" target=\\"18\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"27\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=260;exitDy=125;exitPerimeter=0;entryX=-0.032;entryY=0.511;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"91\\" target=\\"25\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"28\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.002;exitY=0.515;exitDx=0;exitDy=0;exitPerimeter=0;entryX=1.022;entryY=0.248;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"79\\" target=\\"13\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"29\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=157;exitDy=210;exitPerimeter=0;entryX=-0.044;entryY=0.177;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"79\\" target=\\"16\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;Array as=\\"points\\"&gt;&lt;mxPoint x=\\"1020.0000000000005\\" y=\\"640\\"/&gt;&lt;mxPoint x=\\"692.0000000000005\\" y=\\"640\\"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"30\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=0;exitDy=80;exitPerimeter=0;entryX=1.024;entryY=0.736;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"95\\" target=\\"25\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;Array as=\\"points\\"&gt;&lt;mxPoint x=\\"110.00000000000045\\" y=\\"1340\\"/&gt;&lt;mxPoint x=\\"602.0000000000005\\" y=\\"1340\\"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"31\\" style=\\"rounded=0;html=1;exitX=1.001;exitY=0.493;exitDx=0;exitDy=0;exitPerimeter=0;entryX=-0.004;entryY=0.337;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"98\\" target=\\"33\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"32\\" value=\\"\\" style=\\"group;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"20.000000000000455\\" y=\\"1700\\" width=\\"600\\" height=\\"140\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"33\\" value=\\"SAN Rechenzentrum\\" style=\\"verticalAlign=top;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#BEC5C9;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"32\\"&gt;&lt;mxGeometry width=\\"600\\" height=\\"140\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"34\\" value=\\"\\" style=\\"shape=datastore;whiteSpace=wrap;html=1;strokeColor=#000000;fillColor=#FFFFFF;\\" vertex=\\"1\\" parent=\\"32\\"&gt;&lt;mxGeometry x=\\"31.57894736842105\\" y=\\"50\\" width=\\"73.68421052631578\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"35\\" value=\\"\\" style=\\"shape=datastore;whiteSpace=wrap;html=1;strokeColor=#000000;fillColor=#FFFFFF;\\" vertex=\\"1\\" parent=\\"32\\"&gt;&lt;mxGeometry x=\\"136.8421052631579\\" y=\\"50\\" width=\\"73.68421052631578\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"36\\" value=\\"\\" style=\\"shape=datastore;whiteSpace=wrap;html=1;strokeColor=#000000;fillColor=#FFFFFF;\\" vertex=\\"1\\" parent=\\"32\\"&gt;&lt;mxGeometry x=\\"242.1052631578947\\" y=\\"50\\" width=\\"73.68421052631578\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"37\\" value=\\"\\" style=\\"shape=datastore;whiteSpace=wrap;html=1;strokeColor=#000000;fillColor=#FFFFFF;\\" vertex=\\"1\\" parent=\\"32\\"&gt;&lt;mxGeometry x=\\"347.36842105263156\\" y=\\"50\\" width=\\"73.68421052631578\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"38\\" value=\\"\\" style=\\"shape=datastore;whiteSpace=wrap;html=1;strokeColor=#000000;fillColor=#FFFFFF;\\" vertex=\\"1\\" parent=\\"32\\"&gt;&lt;mxGeometry x=\\"452.6315789473684\\" y=\\"50\\" width=\\"73.68421052631578\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"39\\" value=\\"\\" style=\\"group;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"661.0000000000005\\" y=\\"1700\\" width=\\"600\\" height=\\"140\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"40\\" value=\\"SAN Ausweich-Rechenzentrum\\" style=\\"verticalAlign=top;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#BEC5C9;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"39\\"&gt;&lt;mxGeometry width=\\"600\\" height=\\"140\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"41\\" value=\\"\\" style=\\"shape=datastore;whiteSpace=wrap;html=1;strokeColor=#000000;fillColor=#FFFFFF;\\" vertex=\\"1\\" parent=\\"39\\"&gt;&lt;mxGeometry x=\\"31.57894736842105\\" y=\\"50\\" width=\\"73.68421052631578\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"42\\" value=\\"\\" style=\\"shape=datastore;whiteSpace=wrap;html=1;strokeColor=#000000;fillColor=#FFFFFF;\\" vertex=\\"1\\" parent=\\"39\\"&gt;&lt;mxGeometry x=\\"136.8421052631579\\" y=\\"50\\" width=\\"73.68421052631578\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"43\\" value=\\"\\" style=\\"shape=datastore;whiteSpace=wrap;html=1;strokeColor=#000000;fillColor=#FFFFFF;\\" vertex=\\"1\\" parent=\\"39\\"&gt;&lt;mxGeometry x=\\"242.1052631578947\\" y=\\"50\\" width=\\"73.68421052631578\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"44\\" value=\\"\\" style=\\"shape=datastore;whiteSpace=wrap;html=1;strokeColor=#000000;fillColor=#FFFFFF;\\" vertex=\\"1\\" parent=\\"39\\"&gt;&lt;mxGeometry x=\\"347.36842105263156\\" y=\\"50\\" width=\\"73.68421052631578\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"45\\" value=\\"\\" style=\\"shape=datastore;whiteSpace=wrap;html=1;strokeColor=#000000;fillColor=#FFFFFF;\\" vertex=\\"1\\" parent=\\"39\\"&gt;&lt;mxGeometry x=\\"452.6315789473684\\" y=\\"50\\" width=\\"73.68421052631578\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"46\\" value=\\"\\" style=\\"group;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"850.0000000000005\\" y=\\"920\\" width=\\"410\\" height=\\"340\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"47\\" value=\\"Querschnitt Cluster\\" style=\\"verticalAlign=top;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"46\\"&gt;&lt;mxGeometry width=\\"410\\" height=\\"340\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"48\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;Mail Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;intern\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"46\\"&gt;&lt;mxGeometry x=\\"210\\" y=\\"240\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"49\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;AppServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;Tomcat\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"46\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"60\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"50\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;AppServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;Tomcat\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"46\\"&gt;&lt;mxGeometry x=\\"210\\" y=\\"60\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"51\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;Fax Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;Fax Server\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"46\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"150\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"52\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;Fax Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;Fax Server\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"46\\"&gt;&lt;mxGeometry x=\\"210\\" y=\\"150\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"53\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;Mail Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;intern\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"46\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"240\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"54\\" value=\\"\\" style=\\"group;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"850.0000000000005\\" y=\\"744\\" width=\\"410\\" height=\\"157\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"55\\" value=\\"LDAP Cluster\\" style=\\"verticalAlign=top;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"54\\"&gt;&lt;mxGeometry width=\\"410\\" height=\\"157\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"56\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;LDAP Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;LDAP\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"54\\"&gt;&lt;mxGeometry x=\\"210\\" y=\\"60\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"57\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;LDAP Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;LDAP\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"54\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"60\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"58\\" value=\\"\\" style=\\"group;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"660.0000000000005\\" y=\\"1400\\" width=\\"410\\" height=\\"250\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"59\\" value=\\"Datenbank Cluster&amp;lt;br&amp;gt;(Standby)\\" style=\\"verticalAlign=top;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#BEC5C9;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"58\\"&gt;&lt;mxGeometry width=\\"410\\" height=\\"250\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"60\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;DB Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;RDBMS\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFFFF;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"58\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"60\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"61\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;DB Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;RDBMS\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFFFF;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"58\\"&gt;&lt;mxGeometry x=\\"210\\" y=\\"60\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"62\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;DB Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;RDBMS\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFFFF;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"58\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"150\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"63\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=0;exitDy=115;exitPerimeter=0;entryX=1.007;entryY=0.72;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"71\\" target=\\"13\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"64\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=260;exitDy=125;exitPerimeter=0;entryX=0.004;entryY=0.747;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"71\\" target=\\"16\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;Array as=\\"points\\"&gt;&lt;mxPoint x=\\"335.00000000000045\\" y=\\"640\\"/&gt;&lt;mxPoint x=\\"601.0000000000005\\" y=\\"640\\"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"65\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=83.5;exitDy=410;exitPerimeter=0;entryX=0.559;entryY=-0.007;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"55\\" target=\\"18\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;Array as=\\"points\\"&gt;&lt;mxPoint x=\\"810.0000000000005\\" y=\\"828\\"/&gt;&lt;mxPoint x=\\"810.0000000000005\\" y=\\"773\\"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"66\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=175;exitDy=410;exitPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"47\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"810.0000000000005\\" y=\\"820\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"67\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=340;exitDy=210;exitPerimeter=0;entryX=0.256;entryY=-0.004;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"47\\" target=\\"25\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"68\\" style=\\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0;exitDx=0;exitDy=200;exitPerimeter=0;entryX=1.04;entryY=0.276;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"59\\" target=\\"25\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"&gt;&lt;Array as=\\"points\\"&gt;&lt;mxPoint x=\\"870.0000000000005\\" y=\\"1340\\"/&gt;&lt;mxPoint x=\\"676.0000000000005\\" y=\\"1340\\"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"69\\" style=\\"rounded=0;html=1;exitX=1.001;exitY=0.5;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0;entryY=0.659;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=none;endFill=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" source=\\"59\\" target=\\"40\\" parent=\\"1\\"&gt;&lt;mxGeometry relative=\\"1\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"70\\" value=\\"\\" style=\\"group;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"220.00000000000045\\" y=\\"360\\" width=\\"240\\" height=\\"260\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"71\\" value=\\"Portal Web Server Cluster&amp;lt;br&amp;gt;(Virtuelle IP)\\" style=\\"verticalAlign=top;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#CCFF99;fontColor=#000000;strokeColor=#314354;container=0;\\" vertex=\\"1\\" parent=\\"70\\"&gt;&lt;mxGeometry width=\\"240\\" height=\\"260\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"72\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px&amp;quot;&amp;gt;\xAB&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;WebServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px&amp;quot;&amp;gt;\xBB&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;(Apache)\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#CCFF99;fontColor=#000000;strokeColor=#314354;container=0;\\" vertex=\\"1\\" parent=\\"70\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"60\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"73\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;WebServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;(Apache)\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#CCFF99;fontColor=#000000;strokeColor=#314354;container=0;\\" vertex=\\"1\\" parent=\\"70\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"157\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"74\\" value=\\"\\" style=\\"group;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"520.0000000000005\\" y=\\"360\\" width=\\"240\\" height=\\"260\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"75\\" value=\\"Service Gateway Cluster&amp;lt;br&amp;gt;(Virtuelle IP)\\" style=\\"verticalAlign=top;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#ff99cc;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"74\\"&gt;&lt;mxGeometry width=\\"240\\" height=\\"260\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"76\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;AppServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;Tomcat\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FF99CC;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"74\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"60\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"77\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;AppServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;Tomcat\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FF99CC;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"74\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"157\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"78\\" value=\\"\\" style=\\"group;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"820.0000000000005\\" y=\\"360\\" width=\\"410\\" height=\\"157\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"79\\" value=\\"Querschnitt-Cluster\\" style=\\"verticalAlign=top;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"78\\"&gt;&lt;mxGeometry width=\\"410\\" height=\\"157\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"80\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;Mail Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;extern\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"78\\"&gt;&lt;mxGeometry x=\\"210\\" y=\\"63\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"81\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;Mail Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;extern\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"78\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"63\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"82\\" value=\\"\\" style=\\"group;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"30.000000000000455\\" y=\\"840\\" width=\\"240\\" height=\\"260\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"83\\" value=\\"Cluster 1&amp;lt;br&amp;gt;(Virtuelle IP)\\" style=\\"verticalAlign=top;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#99CCFF;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"82\\"&gt;&lt;mxGeometry width=\\"240\\" height=\\"260\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"84\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;AppServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;Tomcat\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#99CCFF;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"82\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"70\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"85\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;AppServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;Tomcat\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#99CCFF;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"82\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"160\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"86\\" value=\\"\\" style=\\"group;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"285.00000000000045\\" y=\\"840\\" width=\\"240\\" height=\\"260\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"87\\" value=\\"Cluster 2&amp;lt;br&amp;gt;(Virtuelle IP)\\" style=\\"verticalAlign=top;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#99CCFF;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"86\\"&gt;&lt;mxGeometry width=\\"240\\" height=\\"260\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"88\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;AppServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;Tomcat\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#99CCFF;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"86\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"70\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"89\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;AppServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;Tomcat\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#99CCFF;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"86\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"160\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"90\\" value=\\"\\" style=\\"group;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"540.0000000000005\\" y=\\"840\\" width=\\"240\\" height=\\"260\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"91\\" value=\\"Access Management Cluster\\" style=\\"verticalAlign=top;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"90\\"&gt;&lt;mxGeometry width=\\"240\\" height=\\"260\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"92\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;AppServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;ACM&amp;lt;span style=&amp;quot;color: rgba(0 , 0 , 0 , 0) ; font-family: monospace ; font-size: 0px ; font-weight: 400&amp;quot;&amp;gt;%3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22%26amp%3Blt%3B%26amp%3Blt%3BAppServer%26amp%3Bgt%3B%26amp%3Bgt%3B%26lt%3Bbr%26gt%3BBeispiel%20A%20SGW%22%20style%3D%22verticalAlign%3Dmiddle%3Balign%3Dcenter%3BspacingTop%3D8%3BspacingLeft%3D2%3BspacingRight%3D12%3Bshape%3Dcube%3Bsize%3D10%3Bdirection%3Dsouth%3BfontStyle%3D1%3Bhtml%3D1%3BfontSize%3D14%3BstrokeWidth%3D1%3BfillColor%3D%23FFFF99%3BfontColor%3D%23000000%3BstrokeColor%3D%23314354%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22930%22%20y%3D%22263%22%20width%3D%22170%22%20height%3D%2280%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E&amp;lt;/span&amp;gt;\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"90\\"&gt;&lt;mxGeometry x=\\"40\\" y=\\"70\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"93\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;AppServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;ACM&amp;lt;span style=&amp;quot;color: rgba(0 , 0 , 0 , 0) ; font-family: monospace ; font-size: 0px ; font-weight: 400&amp;quot;&amp;gt;%3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22%26amp%3Blt%3B%26amp%3Blt%3BAppServer%26amp%3Bgt%3B%26amp%3Bgt%3B%26lt%3Bbr%26gt%3BBeispiel%20A%20SGW%22%20style%3D%22verticalAlign%3Dmiddle%3Balign%3Dcenter%3BspacingTop%3D8%3BspacingLeft%3D2%3BspacingRight%3D12%3Bshape%3Dcube%3Bsize%3D10%3Bdirection%3Dsouth%3BfontStyle%3D1%3Bhtml%3D1%3BfontSize%3D14%3BstrokeWidth%3D1%3BfillColor%3D%23FFFF99%3BfontColor%3D%23000000%3BstrokeColor%3D%23314354%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22930%22%20y%3D%22263%22%20width%3D%22170%22%20height%3D%2280%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E&amp;lt;/span&amp;gt;\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"90\\"&gt;&lt;mxGeometry x=\\"40\\" y=\\"160\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"94\\" value=\\"\\" style=\\"group;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"20.000000000000455\\" y=\\"1400\\" width=\\"170\\" height=\\"140\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"95\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;DB Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;RDBMS&amp;lt;span style=&amp;quot;color: rgba(0 , 0 , 0 , 0) ; font-family: monospace ; font-size: 0px ; font-weight: 400&amp;quot;&amp;gt;%3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22%26amp%3Blt%3B%26amp%3Blt%3BAppServer%26amp%3Bgt%3B%26amp%3Bgt%3B%26lt%3Bbr%26gt%3BBeispiel%20A%20SGW%22%20style%3D%22verticalAlign%3Dmiddle%3Balign%3Dcenter%3BspacingTop%3D8%3BspacingLeft%3D2%3BspacingRight%3D12%3Bshape%3Dcube%3Bsize%3D10%3Bdirection%3Dsouth%3BfontStyle%3D1%3Bhtml%3D1%3BfontSize%3D14%3BstrokeWidth%3D1%3BfillColor%3D%23FFFF99%3BfontColor%3D%23000000%3BstrokeColor%3D%23314354%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22930%22%20y%3D%22263%22%20width%3D%22170%22%20height%3D%2280%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E&amp;lt;/span&amp;gt;\\" style=\\"verticalAlign=top;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#BEC5C9;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"94\\"&gt;&lt;mxGeometry width=\\"170\\" height=\\"140\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"96\\" value=\\"Auswert\\" style=\\"shape=datastore;whiteSpace=wrap;html=1;strokeColor=#000000;fillColor=#FFFFFF;\\" vertex=\\"1\\" parent=\\"94\\"&gt;&lt;mxGeometry x=\\"40\\" y=\\"75\\" width=\\"70\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"97\\" value=\\"\\" style=\\"group;fillColor=none;\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"210.00000000000045\\" y=\\"1400\\" width=\\"410\\" height=\\"250\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"98\\" value=\\"Datenbank Cluster&amp;lt;br&amp;gt;(Prim\xE4r)\\" style=\\"verticalAlign=top;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#BEC5C9;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"97\\"&gt;&lt;mxGeometry width=\\"410\\" height=\\"250\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"99\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;DB Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;RDBMS\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFFFF;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"97\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"70\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"100\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;DB Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;RDBMS\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFFFF;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"97\\"&gt;&lt;mxGeometry x=\\"210\\" y=\\"70\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"101\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;DB Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;RDBMS\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFFFF;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"97\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"160\\" width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 1280,\n    "h": 1860.0000000000002,\n    "aspect": "fixed",\n    "title": "TI-Architektur"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;text-align: center ; margin: 4px 0px 0px&amp;quot;&amp;gt;\xABEntit\xE4tstyp\xBB&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;text-align: center ; margin: 4px 0px 0px&amp;quot;&amp;gt;&amp;lt;b&amp;gt;MKO_Bestand::ETY_Person&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr&amp;gt;&amp;lt;p style=&amp;quot;margin: 0px 0px 0px 8px&amp;quot;&amp;gt;NSA_Attribut:1 DTY_Zeichenkette&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;margin: 0px 0px 0px 8px&amp;quot;&amp;gt;NSA_Datum: DTY_date_time&amp;lt;/p&amp;gt;\\" style=\\"verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;fillColor=#FFCC99;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"220\\" height=\\"110\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 220,\n    "h": 110,\n    "aspect": "fixed",\n    "title": "Entit\xE4tstyp"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;text-align: center ; margin: 4px 0px 0px&amp;quot;&amp;gt;\xABSchnittstellenEntit\xE4tstyp\xBB&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;text-align: center ; margin: 4px 0px 0px&amp;quot;&amp;gt;&amp;lt;b&amp;gt;NSE_Entit\xE4t1&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr&amp;gt;&amp;lt;p style=&amp;quot;margin: 0px ; margin-left: 8px&amp;quot;&amp;gt;NSA_Attribut1: DTY_Zeichenkette [0..1]&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;margin: 0px ; margin-left: 8px&amp;quot;&amp;gt;NSA_Datum: DTY_date_time&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;margin: 0px ; margin-left: 8px&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;\\" style=\\"verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;fillColor=#FFCC99;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"220\\" height=\\"110\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 220,\n    "h": 110,\n    "aspect": "fixed",\n    "title": "Schnittstellenentit\xE4tstyp"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;font style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;color: rgb(0 , 0 , 0) ; text-align: center ; margin: 4px 0px 0px&amp;quot;&amp;gt;\xABMaske\xBB&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;font color=&amp;quot;#000000&amp;quot;&amp;gt;MAS_Maske1&amp;lt;/font&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/font&amp;gt;\\" style=\\"strokeWidth=1;shadow=0;dashed=0;align=center;html=1;shape=mxgraph.mockup.containers.window;align=left;verticalAlign=top;spacingLeft=8;strokeColor2=#008cff;strokeColor3=#c4c4c4;fontColor=#666666;mainText=;fontSize=17;labelBackgroundColor=none;fillColor=#F2F3F4;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"190\\" height=\\"130\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 190,\n    "h": 130,\n    "aspect": "fixed",\n    "title": "Maske"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"DIA_Dialog\\" style=\\"shape=folder;fontStyle=1;tabWidth=110;tabHeight=30;tabPosition=left;html=1;boundedLbl=1;labelInHeader=1;container=1;collapsible=0;recursiveResize=0;fillColor=#FFFF99;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"280\\" height=\\"280\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"&amp;lt;font style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;color: rgb(0 , 0 , 0) ; text-align: center ; margin: 4px 0px 0px&amp;quot;&amp;gt;\xABMaske\xBB&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;font color=&amp;quot;#000000&amp;quot;&amp;gt;MAS_Maske1&amp;lt;/font&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/font&amp;gt;\\" style=\\"strokeWidth=1;shadow=0;dashed=0;align=center;html=1;shape=mxgraph.mockup.containers.window;align=left;verticalAlign=top;spacingLeft=8;strokeColor2=#008cff;strokeColor3=#c4c4c4;fontColor=#666666;mainText=;fontSize=17;labelBackgroundColor=none;fillColor=#F2F3F4;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"20\\" y=\\"50\\" width=\\"190\\" height=\\"130\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 280,\n    "h": 280,\n    "aspect": "fixed",\n    "title": "Dialog"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;margin: 4px 0px 0px&amp;quot;&amp;gt;\xABAkteur\xBB&amp;lt;/p&amp;gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;b&amp;gt;AKR_Akteur&amp;lt;/b&amp;gt;\\" style=\\"shape=umlActor;verticalLabelPosition=bottom;verticalAlign=top;html=1;outlineConnect=0;fillColor=#FFCC99;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"30\\" height=\\"60\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 30,\n    "h": 60,\n    "aspect": "fixed",\n    "title": "Akteur"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span&amp;gt;\xABAnwendungsfall\xBB&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;b&amp;gt;AWF_Anwendungsfall1&amp;lt;/b&amp;gt;\\" style=\\"ellipse;whiteSpace=wrap;html=1;fillColor=#CCFF99;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"180\\" height=\\"110\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 180,\n    "h": 110,\n    "aspect": "fixed",\n    "title": "Anwendungsfall"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;margin: 4px 0px 0px&amp;quot;&amp;gt;\xABAnwendungsfunktion\xBB&amp;lt;/p&amp;gt;&amp;lt;b&amp;gt;AFU_Anwendungsfunktion1&amp;lt;/b&amp;gt;\\" style=\\"rounded=1;whiteSpace=wrap;html=1;fillColor=#CCFF99;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"170\\" height=\\"70\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 170,\n    "h": 70,\n    "aspect": "fixed",\n    "title": "Anwendungsfunktion"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span&amp;gt;\xABBatch\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;Batch_Batch1&amp;lt;/b&amp;gt;\\" style=\\"ellipse;whiteSpace=wrap;html=1;fillColor=#99CCFF;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"180\\" height=\\"110\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 180,\n    "h": 110,\n    "aspect": "fixed",\n    "title": "Batch"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;text-align: center ; margin: 4px 0px 0px&amp;quot;&amp;gt;\xABAngebotene Nachbarschnittstelle\xBB&amp;lt;/p&amp;gt;&amp;lt;b style=&amp;quot;text-align: center&amp;quot;&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;div style=&amp;quot;text-align: center&amp;quot;&amp;gt;&amp;lt;b&amp;gt;NST_Schnittstelle 1&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;\\" style=\\"verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;fillColor=#FF9999;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"240\\" height=\\"60\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 240,\n    "h": 60,\n    "aspect": "fixed",\n    "title": "Angebotene Nachbarschnittstelle"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;text-align: center ; margin: 4px 0px 0px&amp;quot;&amp;gt;\xABBenutzte Nachbarschnittstelle\xBB&amp;lt;/p&amp;gt;&amp;lt;b style=&amp;quot;text-align: center&amp;quot;&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;p style=&amp;quot;margin: 0px ; margin-top: 4px ; text-align: center&amp;quot;&amp;gt;&amp;lt;b&amp;gt;NST_Schnittstelle 2&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;\\" style=\\"verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;fillColor=#FF9999;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"240\\" height=\\"60\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 240,\n    "h": 60,\n    "aspect": "fixed",\n    "title": "Benutzte Nachbarschnittstelle"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"Nichtfunktionale Anforderung\\" style=\\"shape=process;whiteSpace=wrap;html=1;backgroundOutline=1;fillColor=#C8C8C8;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"240\\" height=\\"60\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 240,\n    "h": 60,\n    "aspect": "fixed",\n    "title": "Nichtfunktionale Anforderung"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"\xABAnwendungskomponente\xBB&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;ANK_Anwendungskomponente&amp;lt;/b&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#CD5038;fillColor=#FF9900;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"180\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 180,\n    "h": 90,\n    "aspect": "fixed",\n    "title": "Anwendungskomponente"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"Fachlicher Klammerbezeichner\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fontSize=12;fontColor=#000000;fillColor=none;strokeWidth=2;strokeColor=#576164;dashed=1;verticalAlign=top;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"230\\" height=\\"150\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 230,\n    "h": 150,\n    "aspect": "fixed",\n    "title": "Fachliche Klammer"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"\xABAnwendungssystem\xBB&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;SYS_Anwendungssystem&amp;lt;/b&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#CD5038;fillColor=#FFCC99;verticalAlign=top;container=0;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"300\\" height=\\"290\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 300,\n    "h": 290,\n    "aspect": "fixed",\n    "title": "Anwendungssystem"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"\\" style=\\"group\\" vertex=\\"1\\" connectable=\\"0\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"300\\" height=\\"290\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"\xABAnwendungssystem\xBB&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;SYS_Anwendungssystem&amp;lt;/b&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#CD5038;fillColor=#FFCC99;verticalAlign=top;container=0;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry width=\\"300\\" height=\\"290\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"4\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"265\\" y=\\"10\\" width=\\"20\\" height=\\"20\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"5\\" value=\\"Fachlicher Klammerbezeichner\\" style=\\"rounded=0;whiteSpace=wrap;html=1;fontSize=12;fontColor=#000000;fillColor=none;strokeWidth=2;strokeColor=#576164;dashed=1;verticalAlign=top;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"30\\" y=\\"50\\" width=\\"230\\" height=\\"150\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"6\\" value=\\"\xABAnwendungskomponente\xBB&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;ANK_Anwendungskomponente&amp;lt;/b&amp;gt;\\" style=\\"html=1;dropTarget=0;strokeColor=#CD5038;fillColor=#FF9900;\\" vertex=\\"1\\" parent=\\"2\\"&gt;&lt;mxGeometry x=\\"55\\" y=\\"80\\" width=\\"180\\" height=\\"90\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"7\\" value=\\"\\" style=\\"shape=component;jettyWidth=8;jettyHeight=4;fillColor=none;strokeColor=#000000;\\" vertex=\\"1\\" parent=\\"6\\"&gt;&lt;mxGeometry x=\\"1\\" width=\\"20\\" height=\\"20\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint x=\\"-27\\" y=\\"7\\" as=\\"offset\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 300,\n    "h": 290,\n    "aspect": "fixed",\n    "title": "Anwendungssystem_komplett"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;LiestEntit\xE4tstyp&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"endArrow=open;startArrow=none;endFill=0;startFill=0;endSize=8;html=1;verticalAlign=bottom;dashed=1;labelBackgroundColor=none;rounded=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"230\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 230,\n    "h": 1,\n    "aspect": "fixed",\n    "title": "LiestEntit\xE4tstyp"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;SchreibtEntit\xE4tstyp&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"endArrow=open;startArrow=none;endFill=0;startFill=0;endSize=8;html=1;verticalAlign=bottom;dashed=1;labelBackgroundColor=none;rounded=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"230\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 230,\n    "h": 1,\n    "aspect": "fixed",\n    "title": "SchreibtEntit\xE4tstyp"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;\xC4ndertEntit\xE4tstyp&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"endArrow=open;startArrow=none;endFill=0;startFill=0;endSize=8;html=1;verticalAlign=bottom;dashed=1;labelBackgroundColor=none;rounded=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"230\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 230,\n    "h": 1,\n    "aspect": "fixed",\n    "title": "\xC4ndertEntit\xE4tstyp"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;L\xF6schtEntit\xE4tstyp&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"endArrow=open;startArrow=none;endFill=0;startFill=0;endSize=8;html=1;verticalAlign=bottom;dashed=1;labelBackgroundColor=none;rounded=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"230\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 230,\n    "h": 1,\n    "aspect": "fixed",\n    "title": "L\xF6schtEntit\xE4tstyp"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;VerwendetAnwendungsfall&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"endArrow=open;startArrow=none;endFill=0;startFill=0;endSize=8;html=1;verticalAlign=bottom;dashed=1;labelBackgroundColor=none;rounded=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"230\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 230,\n    "h": 1,\n    "aspect": "fixed",\n    "title": "VerwendetAnwendungsfall"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;F\xFChrtAnwendungsfallAus&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"endArrow=open;startArrow=none;endFill=0;startFill=0;endSize=8;html=1;verticalAlign=bottom;dashed=1;labelBackgroundColor=none;rounded=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"230\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 230,\n    "h": 1,\n    "aspect": "fixed",\n    "title": "F\xFChrtAnwendungsfallAus"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;BenutztNachbarschnittstelle&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"endArrow=open;startArrow=none;endFill=0;startFill=0;endSize=8;html=1;verticalAlign=bottom;dashed=1;labelBackgroundColor=none;rounded=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"230\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 230,\n    "h": 1,\n    "aspect": "fixed",\n    "title": "BenutztNachbarschnittstelle"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;IstSpezialisierungVon&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"endArrow=open;startArrow=none;endFill=0;startFill=0;endSize=8;html=1;verticalAlign=bottom;dashed=1;labelBackgroundColor=none;rounded=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"230\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 230,\n    "h": 1,\n    "aspect": "fixed",\n    "title": "IstSpezialisierungVon"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;VerwendetDialog&amp;lt;span style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"endArrow=open;startArrow=none;endFill=0;startFill=0;endSize=8;html=1;verticalAlign=bottom;dashed=1;labelBackgroundColor=none;rounded=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"230\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 230,\n    "h": 1,\n    "aspect": "fixed",\n    "title": "VerwendetDialog"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;margin: 4px 0px 0px&amp;quot;&amp;gt;\xABA-Komponente\xBB&amp;lt;/p&amp;gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 160,\n    "h": 20,\n    "aspect": "fixed",\n    "title": "A-Komponente"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;margin: 4px 0px 0px&amp;quot;&amp;gt;\xABT-Komponente\xBB&amp;lt;/p&amp;gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 160,\n    "h": 20,\n    "aspect": "fixed",\n    "title": "T-Komponente"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;margin: 4px 0px 0px&amp;quot;&amp;gt;\xABTI-Komponente\xBB&amp;lt;/p&amp;gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 160,\n    "h": 20,\n    "aspect": "fixed",\n    "title": "TI-Komponente"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;margin: 4px 0px 0px&amp;quot;&amp;gt;\xABInterface\xBB&amp;lt;/p&amp;gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 160,\n    "h": 20,\n    "aspect": "fixed",\n    "title": "Interface"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;margin: 4px 0px 0px&amp;quot;&amp;gt;\xABIT-System\xBB&amp;lt;/p&amp;gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 160,\n    "h": 20,\n    "aspect": "fixed",\n    "title": "IT-System"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;margin: 4px 0px 0px&amp;quot;&amp;gt;\xABDatei\xBB&amp;lt;/p&amp;gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" height=\\"20\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 160,\n    "h": 20,\n    "aspect": "fixed",\n    "title": "Datei"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;font-size: 12px ; margin: 4px 0px 0px&amp;quot;&amp;gt;\xABflow\xBB&amp;lt;/p&amp;gt;&amp;lt;b style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"endArrow=open;startArrow=none;endFill=0;startFill=0;endSize=8;html=1;verticalAlign=bottom;dashed=1;labelBackgroundColor=none;rounded=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"230\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 230,\n    "h": 1,\n    "aspect": "fixed",\n    "title": "flow"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;font-size: 12px ; margin: 4px 0px 0px&amp;quot;&amp;gt;&amp;lt;b style=&amp;quot;color: rgb(0 , 0 , 0) ; font-family: &amp;amp;#34;helvetica&amp;amp;#34; ; font-size: 12px ; font-style: normal ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; background-color: rgb(248 , 249 , 250)&amp;quot;&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;color: rgb(0 , 0 , 0) ; font-family: &amp;amp;#34;helvetica&amp;amp;#34; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; background-color: rgb(248 , 249 , 250) ; margin: 4px 0px 0px&amp;quot;&amp;gt;\xABcall\xBB&amp;lt;/p&amp;gt;&amp;lt;b style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"endArrow=open;startArrow=none;endFill=0;startFill=0;endSize=8;html=1;verticalAlign=bottom;dashed=1;labelBackgroundColor=none;rounded=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"230\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 230,\n    "h": 1,\n    "aspect": "fixed",\n    "title": "call"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;p style=&amp;quot;font-size: 12px ; margin: 4px 0px 0px&amp;quot;&amp;gt;&amp;lt;b style=&amp;quot;color: rgb(0 , 0 , 0) ; font-family: &amp;amp;#34;helvetica&amp;amp;#34; ; font-size: 12px ; font-style: normal ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; background-color: rgb(248 , 249 , 250)&amp;quot;&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;color: rgb(0 , 0 , 0) ; font-family: &amp;amp;#34;helvetica&amp;amp;#34; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; background-color: rgb(248 , 249 , 250) ; margin: 4px 0px 0px&amp;quot;&amp;gt;&amp;lt;b style=&amp;quot;color: rgb(0 , 0 , 0) ; font-family: &amp;amp;#34;helvetica&amp;amp;#34; ; font-size: 12px ; font-style: normal ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; background-color: rgb(248 , 249 , 250)&amp;quot;&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;color: rgb(0 , 0 , 0) ; font-family: &amp;amp;#34;helvetica&amp;amp;#34; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; background-color: rgb(248 , 249 , 250) ; margin: 4px 0px 0px&amp;quot;&amp;gt;\xABuse\xBB&amp;lt;/p&amp;gt;&amp;lt;b style=&amp;quot;font-size: 12px&amp;quot;&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"endArrow=open;startArrow=none;endFill=0;startFill=0;endSize=8;html=1;verticalAlign=bottom;dashed=1;labelBackgroundColor=none;rounded=0;strokeColor=#576164;strokeWidth=2;\\" edge=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" relative=\\"1\\" as=\\"geometry\\"&gt;&lt;mxPoint as=\\"sourcePoint\\"/&gt;&lt;mxPoint x=\\"230\\" as=\\"targetPoint\\"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 230,\n    "h": 1,\n    "aspect": "fixed",\n    "title": "use"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px&amp;quot;&amp;gt;\xAB&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;WebServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px&amp;quot;&amp;gt;\xBB&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;(Apache)\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#CCFF99;fontColor=#000000;strokeColor=#314354;container=0;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 170,\n    "h": 80,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;AppServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;Tomcat\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FF99CC;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 170,\n    "h": 80,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;AppServer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;Tomcat\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFF99;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 170,\n    "h": 80,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;DB Server&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;RDBMS\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#FFFFFF;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"170\\" height=\\"80\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 170,\n    "h": 80,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;Firewall&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#c0c0c0;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 160,\n    "h": 50,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xAB&amp;lt;/span&amp;gt;LoadBalancer&amp;lt;span style=&amp;quot;font-weight: 400&amp;quot;&amp;gt;\xBB&amp;lt;/span&amp;gt;\\" style=\\"verticalAlign=middle;align=center;spacingTop=8;spacingLeft=2;spacingRight=12;shape=cube;size=10;direction=south;fontStyle=1;html=1;fontSize=14;strokeWidth=1;fillColor=#c0c0c0;fontColor=#000000;strokeColor=#314354;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"160\\" height=\\"50\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 160,\n    "h": 50,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"Informations- und Dienstzone\\" style=\\"rounded=0;whiteSpace=wrap;html=1;dashed=1;strokeWidth=3;fontSize=14;align=left;fontStyle=3;verticalAlign=top;spacingLeft=5;spacingTop=5;fillColor=none;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"1280\\" height=\\"390\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 1280,\n    "h": 390,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;b&amp;gt;1&amp;lt;/b&amp;gt;\\" style=\\"ellipse;whiteSpace=wrap;html=1;aspect=fixed;strokeColor=#FF9900;strokeWidth=5;fontSize=14;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"40\\" height=\\"40\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 40,\n    "h": 40,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;b&amp;gt;2&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"ellipse;whiteSpace=wrap;html=1;aspect=fixed;strokeColor=#FF9900;strokeWidth=5;fontSize=14;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"40\\" height=\\"40\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 40,\n    "h": 40,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;b&amp;gt;3&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"ellipse;whiteSpace=wrap;html=1;aspect=fixed;strokeColor=#FF9900;strokeWidth=5;fontSize=14;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"40\\" height=\\"40\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 40,\n    "h": 40,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;b&amp;gt;4&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"ellipse;whiteSpace=wrap;html=1;aspect=fixed;strokeColor=#FF9900;strokeWidth=5;fontSize=14;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"40\\" height=\\"40\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 40,\n    "h": 40,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;b&amp;gt;5&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"ellipse;whiteSpace=wrap;html=1;aspect=fixed;strokeColor=#FF9900;strokeWidth=5;fontSize=14;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"40\\" height=\\"40\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 40,\n    "h": 40,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;b&amp;gt;6&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"ellipse;whiteSpace=wrap;html=1;aspect=fixed;strokeColor=#FF9900;strokeWidth=5;fontSize=14;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"40\\" height=\\"40\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 40,\n    "h": 40,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;b&amp;gt;7&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"ellipse;whiteSpace=wrap;html=1;aspect=fixed;strokeColor=#FF9900;strokeWidth=5;fontSize=14;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"40\\" height=\\"40\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 40,\n    "h": 40,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;b&amp;gt;8&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"ellipse;whiteSpace=wrap;html=1;aspect=fixed;strokeColor=#FF9900;strokeWidth=5;fontSize=14;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"40\\" height=\\"40\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 40,\n    "h": 40,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"&amp;lt;b&amp;gt;9&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;\\" style=\\"ellipse;whiteSpace=wrap;html=1;aspect=fixed;strokeColor=#FF9900;strokeWidth=5;fontSize=14;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry width=\\"40\\" height=\\"40\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 40,\n    "h": 40,\n    "aspect": "fixed"\n  },\n  {\n    "xml": "&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id=\\"0\\"/&gt;&lt;mxCell id=\\"1\\" parent=\\"0\\"/&gt;&lt;mxCell id=\\"2\\" value=\\"\\" style=\\"shape=hexagon;perimeter=hexagonPerimeter2;whiteSpace=wrap;html=1;fixedSize=1;strokeColor=default;fillColor=default;size=25.000000000000057;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry y=\\"46\\" width=\\"100\\" height=\\"87\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"3\\" value=\\"\\" style=\\"shape=hexagon;perimeter=hexagonPerimeter2;whiteSpace=wrap;html=1;fixedSize=1;strokeColor=default;fillColor=default;size=25.000000000000057;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"80\\" width=\\"100\\" height=\\"87\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;mxCell id=\\"4\\" value=\\"\\" style=\\"shape=hexagon;perimeter=hexagonPerimeter2;whiteSpace=wrap;html=1;fixedSize=1;strokeColor=default;fillColor=default;size=25.000000000000057;\\" vertex=\\"1\\" parent=\\"1\\"&gt;&lt;mxGeometry x=\\"80\\" y=\\"92\\" width=\\"100\\" height=\\"87\\" as=\\"geometry\\"/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;",\n    "w": 180,\n    "h": 179,\n    "aspect": "fixed",\n    "title": "Waben"\n  }\n]</mxlibrary>';
  }
});

// src/main/todrawio-isyfact-isyfactlib.js
var require_todrawio_isyfact_isyfactlib = __commonJS({
  "src/main/todrawio-isyfact-isyfactlib.js"(exports2, module2) {
    var { unEscX } = require_todrawio_isyfact_functions();
    var p = require_fxp();
    xmlParser = new p.XMLParser({
      ignoreAttributes: false,
      processEntities: true,
      attributeNamePrefix: ""
    });
    xmlBuilder = new p.XMLBuilder({
      arrayNodeName: "mxCell",
      attributesGroupName: false,
      ignoreAttributes: false,
      attributeNamePrefix: ""
    });
    function readDrawioLibraryJson2(filePath) {
      let drawioLibXml;
      try {
        drawioLibXml = require_IsyFact_drawiolib();
      } catch (e) {
        console.log("Using fallback for drawio library XML:", e.message);
        const fs = require("fs");
        const path = require("path");
        drawioLibXml = fs.readFileSync(path.join(__dirname, "../../data/IsyFact.drawiolib.xml"), "utf8");
      }
      sb = drawioLibXml;
      var match = sb.match(/<mxlibrary>([\s\S]*?)<\/mxlibrary>/);
      if (!match) {
        throw new Error("No <mxlibrary>...</mxlibrary> section found.");
      }
      var jsonText = match[1].trim();
      console.log(JSON.parse(jsonText).length);
      return JSON.parse(jsonText);
    }
    function getGraphObject(lib, title) {
      for (let i = 0; i < lib.length; i++) {
        if (lib[i].title === title) {
          let obj = Object.assign({}, lib[i]);
          let matches = obj.xml.match(/&lt;mxCell[\s\S]*?&lt;\/mxCell&gt;/g);
          if (!matches) {
            return obj;
          }
          obj.mxCell = matches ? matches.join("\n") : "";
          return obj;
        }
      }
      return null;
    }
    function adjustIds2(jsonObj, parentId) {
      function deepClone(obj2) {
        return JSON.parse(JSON.stringify(obj2));
      }
      let obj = deepClone(jsonObj);
      let cells = [];
      if (obj.mxGraphModel && obj.mxGraphModel.root && Array.isArray(obj.mxGraphModel.root.mxCell)) {
        cells = obj.mxGraphModel.root.mxCell;
      } else if (Array.isArray(obj.mxCell)) {
        cells = obj.mxCell;
      } else {
        throw new Error("Unsupported JSON structure for adjustIds2");
      }
      let idMap = {};
      cells.forEach((c) => {
        idMap[c.id] = c;
      });
      let rootCells = cells.filter((c) => c.parent === "1");
      if (rootCells.length === 0) throw new Error("No root cell found");
      let newIdMap = {};
      function randomId() {
        return Math.random().toString(36).substr(2, 10);
      }
      function assignIds(currentId, newId, parentNewId) {
        let cell = idMap[currentId];
        if (!cell) return;
        newIdMap[currentId] = { newId, newParent: parentNewId };
        let children = cells.filter((c) => c.parent === currentId);
        for (let i = 0; i < children.length; i++) {
          assignIds(children[i].id, newId + "-" + i, newId);
        }
      }
      let rootId = randomId();
      for (let r = 0; r < rootCells.length; r++) {
        assignIds(rootCells[r].id, rootId + (rootCells.length > 1 ? "-" + r : ""), parentId);
      }
      cells.forEach((c) => {
        let newIds = newIdMap[c.id];
        if (newIds) {
          c.id = newIds.newId;
          if ("parent" in c) {
            c.parent = newIds.newParent;
          }
        }
      });
      if (obj.mxGraphModel && obj.mxGraphModel.root && Array.isArray(obj.mxGraphModel.root.mxCell)) {
        obj.mxGraphModel.root.mxCell = obj.mxGraphModel.root.mxCell.filter((c) => c.id !== "0" && c.id !== "1");
      } else if (Array.isArray(obj.mxCell)) {
        obj.mxCell = obj.mxCell.filter((c) => c.id !== "0" && c.id !== "1");
      }
      return obj;
    }
    function positioning2(jsonObj, x, y, parentId) {
      function deepClone(obj2) {
        return JSON.parse(JSON.stringify(obj2));
      }
      let obj = deepClone(jsonObj);
      let cells = [];
      if (obj.mxGraphModel && obj.mxGraphModel.root && Array.isArray(obj.mxGraphModel.root.mxCell)) {
        cells = obj.mxGraphModel.root.mxCell;
      } else if (Array.isArray(obj.mxCell)) {
        cells = obj.mxCell;
      } else {
        throw new Error("Unsupported JSON structure for positioning2");
      }
      cells.forEach((cell) => {
        if (cell.parent === parentId && cell.mxGeometry) {
          cell.mxGeometry.x = x;
          cell.mxGeometry.y = y;
        }
      });
      return obj;
    }
    function naming2(dom, name) {
      function deepClone(obj2) {
        return JSON.parse(JSON.stringify(obj2));
      }
      let obj = deepClone(dom);
      let cells = [];
      if (obj.mxGraphModel && obj.mxGraphModel.root && Array.isArray(obj.mxGraphModel.root.mxCell)) {
        cells = obj.mxGraphModel.root.mxCell;
      } else if (Array.isArray(obj.mxCell)) {
        cells = obj.mxCell;
      } else {
        throw new Error("Unsupported JSON structure for naming2");
      }
      const valueRegex = /^«[^»]+»<br><b>[^<]*<\/b>$/;
      const plainTextRegex = /^[a-zA-Z0-9 _-]+$/;
      cells.forEach((cell) => {
        if (typeof cell.value === "string") {
          console.log("naming:", name, "cell value:", cell.value);
          if (valueRegex.test(cell.value)) {
            cell.value = cell.value.replace(/(<b>)[^<]*(<\/b>)/, `$1${name}$2`);
          } else if (plainTextRegex.test(cell.value)) {
            cell.value = name;
          }
        }
      });
      return obj;
    }
    module2.exports = {
      readDrawioLibraryJson: readDrawioLibraryJson2,
      getGraphObject,
      unEscX,
      adjustIds2,
      positioning2,
      naming2
    };
  }
});

// src/main/constants.js
var require_constants = __commonJS({
  "src/main/constants.js"(exports2, module2) {
    var junctionAndColor = "#000000";
    var junctionOrColor = "#ffffff";
    var c4ContainerStyle = "rounded=1;whiteSpace=wrap;html=1;labelBackgroundColor=none;fillColor=#23A2D9;fontColor=#ffffff;align=center;arcSize=10;strokeColor=#0E7DAD;metaEdit=1;resizable=1;points=[[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0.25,0],[1,0.5,0],[1,0.75,0],[0.75,1,0],[0.5,1,0],[0.25,1,0],[0,0.75,0],[0,0.5,0],[0,0.25,0]];";
    var c4SystemStyle = "rounded=1;whiteSpace=wrap;html=1;labelBackgroundColor=none;fillColor=#1061B0;fontColor=#ffffff;align=center;arcSize=10;strokeColor=#0D5091;metaEdit=1;resizable=1;points=[[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0.25,0],[1,0.5,0],[1,0.75,0],[0.75,1,0],[0.5,1,0],[0.25,1,0],[0,0.75,0],[0,0.5,0],[0,0.25,0]];";
    var c4PersonStyle = "html=1;dashed=0;whiteSpace=wrap;fillColor=#083F75;strokeColor=#06315C;fontColor=#ffffff;shape=mxgraph.c4.person2;align=center;metaEdit=1;points=[[0.5,0,0],[1,0.5,0],[1,0.75,0],[0.75,1,0],[0.5,1,0],[0.25,1,0],[0,0.75,0],[0,0.5,0]];resizable=1;";
    var c4SystemScopeBoundary = "rounded=1;whiteSpace=wrap;html=1;dashed=1;arcSize=20;fillColor=#dae8fc;strokeColor=#6c8ebf;labelBackgroundColor=none;align=left;verticalAlign=bottom;labelBorderColor=none;spacingTop=0;spacing=10;dashPattern=8 4;metaEdit=1;rotatable=0;perimeter=rectanglePerimeter;labelPadding=0;allowArrows=0;connectable=0;expand=0;recursiveResize=0;editable=1;pointerEvents=0;absoluteArcSize=1;points=[[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0.25,0],[1,0.5,0],[1,0.75,0],[0.75,1,0],[0.5,1,0],[0.25,1,0],[0,0.75,0],[0,0.5,0],[0,0.25,0]];strokeWidth=3;fontColor=#004C99;";
    var c4SolidRelStyle = "endArrow=blockThin;html=1;fontColor=#404040;strokeWidth=2;endFill=1;strokeColor=#828282;metaEdit=1;endSize=14;startSize=14;jumpStyle=arc;jumpSize=16;rounded=0;align=right;exitPerimeter=0;elbow=vertical;";
    var c4DashedRelStyle = "endArrow=blockThin;html=1;fontColor=#404040;strokeWidth=1;endFill=1;strokeColor=#828282;elbow=vertical;metaEdit=1;endSize=14;startSize=14;jumpStyle=arc;jumpSize=16;rounded=0;dashed=1;dashPattern=8 8;";
    var c4SolidNondirectedRelStyle = "endArrow=none;html=1;fontColor=#404040;strokeWidth=1;endFill=1;strokeColor=#828282;elbow=vertical;metaEdit=1;endSize=14;startSize=14;jumpStyle=arc;jumpSize=16;rounded=0";
    var c4ElemMap2 = /* @__PURE__ */ new Map([
      // Archi type                draw.io C4 style
      ["Systemverbund", c4SystemStyle],
      ["Person", c4PersonStyle],
      ["business-actor", c4PersonStyle],
      ["application-component", c4SystemStyle],
      ["application-service", c4SystemStyle],
      ["application-interface", c4SystemStyle],
      ["business-role", c4PersonStyle],
      ["business-process", c4ContainerStyle],
      ["business-object", c4ContainerStyle],
      ["data-object", c4ContainerStyle],
      ["node", c4ContainerStyle],
      ["device", c4ContainerStyle],
      ["artifact", c4ContainerStyle],
      ["technology-interface", c4ContainerStyle],
      ["technology-service", c4ContainerStyle],
      ["technology-collaboration", c4ContainerStyle],
      ["technology-event", c4ContainerStyle],
      ["technology-function", c4ContainerStyle],
      ["technology-interaction", c4ContainerStyle],
      ["technology-process", c4ContainerStyle],
      ["application-collaboration", c4ContainerStyle],
      ["application-event", c4ContainerStyle],
      ["application-function", c4ContainerStyle],
      ["application-interaction", c4ContainerStyle],
      ["application-process", c4ContainerStyle],
      ["grouping", c4SystemScopeBoundary],
      ["location", c4SystemScopeBoundary],
      ["diagram-model-note", "shape=card;whiteSpace=wrap;html=1;direction=west;"],
      ["junction_or", "ellipse;html=1;verticalLabelPosition=bottom;fontColor=" + junctionAndColor + "labelBackgroundColor=" + junctionOrColor + ";verticalAlign=top;fillColor=" + junctionOrColor],
      ["junction_and", "ellipse;html=1;verticalLabelPosition=bottom;fontColor=" + junctionOrColor + "labelBackgroundColor=" + junctionAndColor + ";verticalAlign=top;fillColor=" + junctionAndColor],
      ["archimate-diagram-model", c4ContainerStyle],
      ["diagram-model-group", c4SystemScopeBoundary],
      ["port", "rounded=0;whiteSpace=wrap;html=1;strokeColor=#23445D;"]
    ]);
    var c4TypeMap = /* @__PURE__ */ new Map([
      ["business-actor", "Person"],
      ["application-component", "System"],
      ["application-service", "System"],
      ["application-interface", "Interface"],
      ["business-role", "Person"],
      ["business-process", "System"],
      ["business-object", "Container"],
      ["data-object", "Container"],
      ["node", "Container"],
      ["device", "Container"],
      ["artifact", "Container"],
      ["technology-interface", "System"],
      ["technology-service", "System"],
      ["technology-collaboration", "Container"],
      ["technology-event", "Container"],
      ["technology-function", "Container"],
      ["technology-interaction", "Container"],
      ["technology-process", "Container"],
      ["application-collaboration", "Container"],
      ["application-event", "Container"],
      ["application-function", "Container"],
      ["application-interaction", "Container"],
      ["application-process", "System"],
      ["grouping", "SystemScopeBoundary"],
      ["location", "SystemScopeBoundary"],
      ["diagram-model-note", "Container"],
      ["diagram-model-group", "SystemScopeBoundary"],
      ["junction_and", "Junction"],
      ["junction_or", "Junction"],
      ["archimate-diagram-model", "Container"],
      ["port", "port"],
      ["default", "Element"]
    ]);
    var c4RelMap = /* @__PURE__ */ new Map([
      ["association-relationship", c4SolidNondirectedRelStyle],
      ["diagram-model-connection", c4SolidNondirectedRelStyle],
      ["serving-relationship", c4SolidRelStyle],
      ["realization-relationship", c4DashedRelStyle],
      ["triggering-relationship", c4SolidRelStyle],
      ["flow-relationship", c4DashedRelStyle],
      ["access-relationship", c4SolidRelStyle],
      // ["composition-relationship", "endArrow=diamondThin;html=1;startFill=1;"],
      // ["aggregation-relationship", "endArrow=diamondThin;html=1;startFill=0;"],
      ["specialization-relationship", c4SolidRelStyle],
      ["assignment-relationship", c4SolidRelStyle]
      // ["default",                  "endArrow=block;html=1;endFill=1;"]
    ]);
    module2.exports = {
      c4ContainerStyle,
      c4SystemStyle,
      c4PersonStyle,
      c4SystemScopeBoundary,
      c4SolidRelStyle,
      c4DashedRelStyle,
      c4SolidNondirectedRelStyle,
      c4ElemMap: c4ElemMap2,
      c4TypeMap,
      c4RelMap
    };
  }
});

// src/main/todrawio-isyfact-elements.js
var require_todrawio_isyfact_elements = __commonJS({
  "src/main/todrawio-isyfact-elements.js"(exports2, module2) {
    var {
      readDrawioLibraryJson: readDrawioLibraryJson2,
      getGraphObject,
      adjustIds2,
      positioning2,
      naming2,
      unEscX
    } = require_todrawio_isyfact_isyfactlib();
    var { c4ObjLabel, c4Tooltip, effectiveFontColor, setShapeColor, escX: escX2 } = require_todrawio_isyfact_functions();
    var isyfactlib2 = () => readDrawioLibraryJson2();
    function createElementWithLink(newId, c4Name, c4Type, c4Description, style, parent, e, linkValue, fw) {
      let groupId = `${newId}_group`;
      let mainObjId = `${newId}`;
      style = setShapeColor(style, e);
      var newElem = `<mxCell style="${style}" vertex="1" parent="${groupId}">
        <mxGeometry x="0" y="0" width="${e.bounds.width}" height="${e.bounds.height}" as="geometry" />
    </mxCell>
`;
      let label2 = c4ObjLabel(c4Name, c4Type, c4Description, effectiveFontColor(e));
      var mainObj = `			<object id="${mainObjId}" c4Name="${c4Name}" c4Description="${c4Description}" c4Type="${c4Type}" label="${label2}" placeholders="1" tooltip="${c4Tooltip(c4Name, c4Type, c4Description)}" link="${escX2(linkValue)}">
        ${newElem}
    </object>
`;
      let iconSize = 24;
      let iconX = e.bounds.width - iconSize;
      let iconY = 0;
      let linkIconObj = `           <object id="${newId}_linkicon" label="" link="${escX2(linkValue)}">
        <mxCell style="shape=mxgraph.ios7.misc.link;html=1;aspect=fixed;fillColor=#4CDA64;strokeColor=#000000;" vertex="1" parent="${groupId}">
            <mxGeometry x="${iconX}" y="${iconY}" width="${iconSize}" height="${iconSize}" as="geometry" />
        </mxCell>
    </object>
`;
      let groupObj = `           <object id="${groupId}" label="">
        <mxCell vertex="1" style="group" connectable="0" parent="${parent}">
            <mxGeometry x="${e.bounds.x}" y="${e.bounds.y}" width="${e.bounds.width}" height="${e.bounds.height}" as="geometry" />
        </mxCell>	
    </object>
`;
      fw.write(groupObj);
      fw.write(mainObj);
      fw.write(linkIconObj);
    }
    function createIsyFactElement(newId, name, description, parent, e, fw) {
      let ifType = e.prop("ifType");
      let graphObject = getGraphObject(isyfactlib2(), ifType).xml;
      const adjusted = adjustIds2(xmlParser.parse(unEscX(graphObject)), parent);
      const positioned = positioning2(adjusted, e.bounds.x, e.bounds.y, parent);
      const named = naming2(positioned, name);
      let label2 = c4ObjLabel(name, ifType, description, effectiveFontColor(e));
      var mainObj = `			<object id="${newId}" c4Name="${name}" c4Description="${description}" c4Type="${ifType}" label="${label2}" placeholders="1" tooltip="${c4Tooltip(name, ifType, description)}">
        ${xmlBuilder.build(named.mxGraphModel.root)}
    </object>
`;
      fw.write(mainObj);
    }
    function createElementWithoutLink(newId, c4Name, c4Type, c4Description, style, parent, e, fw) {
      console.log("createElementWithoutLink: " + c4Name + c4Type + " " + c4Description);
      style = setShapeColor(style, e);
      var newElem = `<mxCell style="${style}" vertex="1" parent="${parent}">
        <mxGeometry x="${e.bounds.x}" y="${e.bounds.y}" width="${e.bounds.width}" height="${e.bounds.height}" as="geometry" />
    </mxCell>
`;
      let label2 = c4ObjLabel(c4Name, c4Type, c4Description, effectiveFontColor(e));
      var mainObj = `			<object id="${newId}" c4Name="${c4Name}" c4Description="${c4Description}" c4Type="${c4Type}" label="${label2}" placeholders="1" tooltip="${c4Tooltip(c4Name, c4Type, c4Description)}">
        ${newElem}
    </object>
`;
      fw.write(mainObj);
    }
    module2.exports = {
      createElementWithLink,
      createIsyFactElement,
      createElementWithoutLink
    };
  }
});

// src/main/mapElementsC4.js
var require_mapElementsC4 = __commonJS({
  "src/main/mapElementsC4.js"(exports2, module2) {
    var {
      addFontSizeToStyle,
      escX: escX2,
      effectiveFillColor,
      effectiveFontColor
    } = require_todrawio_isyfact_functions();
    var {
      createElementWithLink,
      createIsyFactElement,
      createElementWithoutLink,
      createConnectorWithTopic,
      createConnector,
      handleBendPoints
    } = require_todrawio_isyfact_elements();
    var {
      c4ElemMap: c4ElemMap2,
      c4TypeMap,
      c4RelMap
    } = require_constants();
    function handleType(e) {
      let type;
      switch (e.type) {
        case "access-relationship":
          switch (e.concept.accessType) {
            case "access":
              type = "access-relationship";
              break;
            case "read":
              type = "access-relationship_read";
              break;
            case "write":
              type = "access-relationship_write";
              break;
            case "readwrite":
              type = "access-relationship_readwrite";
              break;
          }
          break;
        case "junction":
          switch (e.concept.junctionType) {
            case "and":
              type = "junction_and";
              break;
            case "or":
              type = "junction_or";
              break;
          }
          break;
        default:
          type = e.type;
          break;
      }
      return type;
    }
    function mapElementsC42(fw, element, parent) {
      console.log("Mapping elements in: " + element.name + " (" + element.id + ")");
      $(element).children().each(function(e) {
        let parentElements = $(e).parent();
        console.log("Mapping element: " + e.name + " (" + e.id + ") type: " + e.type + " parent: " + element.name);
        let newId = e.id;
        let c4Name = escX2(e.label && e.label.trim() !== "" ? e.label : e.text ? e.text : e.name || "");
        let c4Description = escX2(e.documentation || "");
        let archiType = handleType(e);
        let parentHasPort = false;
        parentElements.each(function(p) {
          if (typeof p.prop === "function" && p.prop().includes("port")) {
            parentHasPort = true;
            return false;
          }
        });
        let c4Type, baseStyle;
        if (parentHasPort) {
          c4Type = "port";
          baseStyle = c4ElemMap2.get("port");
        } else {
          c4Type = typeof e.prop === "function" && e.prop("c4Type") && e.prop("c4Type").trim() !== "" ? escX2(e.prop("c4Type")) : c4TypeMap.get(archiType) || c4TypeMap.get("default");
          baseStyle = typeof c4ElemMap2.get(c4Type) !== "undefined" ? c4ElemMap2.get(c4Type) : c4ElemMap2.get(archiType) || c4ElemMap2.get("default");
        }
        let style = baseStyle;
        var fontColor = effectiveFontColor(e);
        if (!/fontColor=/.test(baseStyle)) {
          style += `fontColor=${fontColor};`;
        }
        if (!/fillColor=/.test(baseStyle)) {
          style += `fillColor=${effectiveFillColor(e)};`;
        }
        if (typeof e.opacity !== "undefined" && e.opacity !== null) {
          let opacity = Math.round(e.opacity / 255 * 100);
          style = style + `opacity=${opacity};`;
        }
        style = addFontSizeToStyle(style, e);
        let linkValue = "";
        let hasLink = false;
        if (typeof e.prop === "function") {
          linkValue = e.prop("link");
          if (linkValue && linkValue.trim() !== "") {
            hasLink = true;
          }
        }
        if (e.prop("ifType")) {
          createIsyFactElement(newId, c4Name, c4Description, parent, e, fw);
        } else if (typeof baseStyle !== "undefined") {
          if (hasLink) {
            createElementWithLink(newId, c4Name, c4Type, c4Description, style, parent, e, linkValue, fw);
          } else {
            createElementWithoutLink(newId, c4Name, c4Type, c4Description, style, parent, e, fw);
          }
        } else {
          let relStyle = c4RelMap.get(archiType) || c4RelMap.get("default");
          if (typeof relStyle !== "undefined") {
            let entryExit = routeConnections ? handleEntryExit(e) : null;
            let topic = typeof e.prop === "function" && e.prop("topic") && e.prop("topic").trim();
            if (topic) {
              createConnectorWithTopic(topic, newId, c4Name, c4Type, c4Description, relStyle, parent, e, entryExit, fw);
            } else {
              let bendPoints = routeConnections ? handleBendPoints(e) : "";
              createConnector(newId, c4Name, c4Type, c4Description, relStyle, parent, e, entryExit, bendPoints, fw);
            }
          } else {
            console.log("Not Found: " + e.id + "," + e.type + "\n");
          }
        }
        mapElementsC42(fw, e, newId);
      });
    }
    module2.exports = { mapElementsC4: mapElementsC42 };
  }
});

// src/main/todrawio-isyfact.js
var {
  getAbsoluteBendpoints,
  escX
} = require_todrawio_isyfact_functions();
var {
  readDrawioLibraryJson
} = require_todrawio_isyfact_isyfactlib();
var {
  c4ElemMap
} = require_constants();
var { mapElementsC4 } = require_mapElementsC4();
console.log("Starting to export view to draw.io (C4 shapes)");
var archiPrefs = Java.type("com.archimatetool.editor.ArchiPlugin").PREFERENCES;
console.log("Default color for Application Component: " + archiPrefs.getString("folderColour_Business"));
var OutputStreamWriter = Java.type("java.io.OutputStreamWriter");
var FileOutputStream = Java.type("java.io.FileOutputStream");
var StandardCharsets = Java.type("java.nio.charset.StandardCharsets");
var theView = $(selection).filter("archimate-diagram-model").first();
var isyfactlib = readDrawioLibraryJson(__DIR__ + "IsyFact.drawiolib.xml");
console.log("IsyFact library loaded (" + isyfactlib.length + " elements)");
if (theView) {
  const fileName = window.promptSaveFile({
    title: `Draw.io filename for view ${theView.name}`,
    filterExtensions: ["*.drawio"],
    fileName: `${model.name}_${theView.name}_C4`
  });
  if (fileName) {
    const date = /* @__PURE__ */ new Date();
    const timeISOString = date.toISOString();
    fw = new OutputStreamWriter(new FileOutputStream(fileName, false), StandardCharsets.UTF_8);
    const header = `<?xml version="1.0" encoding="UTF-8"?>
<mxfile host="" modified="${timeISOString}" agent="Archi" etag="${model.name}" type="device">
    <diagram id="${theView.id}" name="${escX(theView.name)}">
        <mxGraphModel dx="2302" dy="697" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="0" />
                <mxCell id="1" parent="0" />
`;
    fw.write(header);
    mapElementsC4(fw, theView, "1");
    footer = `			</root>
        </mxGraphModel>
    </diagram>
</mxfile>
`;
    fw.write(footer);
    fw.close();
    console.log("Done exporting view to draw.io (C4 shapes)");
  }
} else {
  console.log("No view selected");
}
var fw;
var footer;
